import { CdnEntityAssets } from '../types/cdn-entity-assets';
import { CdnAssetOptions, CdnStandardAssetOptions } from '../types/cdn-options';
import { CdnMediaType } from './../types/cdn-media-type';
import { CdnClientOptions } from './../types/cdn-options';
/**
 * A front-end client helper for consuming assets from the Vista CDN.
 */
export declare class CdnClient {
    /** The base URL of the CDN. */
    private cdnUrl;
    /** The default options for all CDN asset URLs. */
    private options?;
    /**
     * Creates a CDN Client instance.
     * @param cdnUrl The base URL of the CDN.
     * @param options The default options for all CDN asset URLs.
     */
    constructor(cdnUrl: string, options?: CdnClientOptions);
    /**
     * URL builder for Film assets.
     * @param filmId The ID of the Film entity.
     * @param options Options for the Film's assets.
     */
    film(filmId: string, options?: CdnStandardAssetOptions): CdnEntityAssets.Film;
    /**
     * URL builder for Site assets.
     * @param siteId The ID of the Site entity.
     * @param options Options for the Site's assets.
     */
    site(siteId: string, options?: CdnStandardAssetOptions): CdnEntityAssets.Site;
    /**
     * URL builder for Item assets.
     * @param itemId The ID of the Item entity.
     * @param options Options for the Item's assets.
     */
    item(itemId: string, options?: CdnStandardAssetOptions): CdnEntityAssets.Item;
    /**
     * URL builder for Ticket Type assets.
     * @param ticketTypeId The ID of the Ticket Type entity.
     * @param options Options for the Ticket Type's assets.
     */
    ticketType(ticketTypeId: string, options?: CdnStandardAssetOptions): CdnEntityAssets.TicketType;
    /**
     * URL builder for Advertising Profile assets.
     * @param advertisingProfileId The ID of the Advertising Profile entity.
     * @param options Options for the Advertising Profile's assets.
     */
    advertisingProfile(advertisingProfileId: string, options?: CdnStandardAssetOptions): CdnEntityAssets.AdvertisingProfile;
    /**
     * URL builder for Promotion assets.
     * @param promotionId The ID of the Promotion entity.
     * @param options Options for the Promotion's assets.
     */
    promotion(promotionId: string, options?: CdnStandardAssetOptions): CdnEntityAssets.Promotion;
    /**
     * URL builder for Attribute assets.
     * @param attributeId The ID of the Attribute entity.
     * @param options Options for the Attribute's assets.
     */
    attribute(attributeId: string, options?: CdnStandardAssetOptions): CdnEntityAssets.Attribute;
    /**
     * URL builder for Event assets.
     * @param eventId The ID of the Event entity.
     * @param options Options for the Event's assets.
     */
    event(eventId: string, options?: CdnStandardAssetOptions): CdnEntityAssets.Event;
    /**
     * URL builder for Censor Rating assets.
     * @param censorRatingId The ID of the Censor Rating entity.
     * @param options Options for the Censor Rating's assets.
     */
    censorRating(censorRatingId: string, options?: CdnStandardAssetOptions): CdnEntityAssets.CensorRating;
    /**
     * URL builder for Corporate Booking assets.
     * @param corporateBookingId The ID of the Corporate Booking entity.
     * @param options Options for the Corporate Booking's assets.
     */
    corporateBooking(corporateBookingId: string, options?: CdnStandardAssetOptions): CdnEntityAssets.CorporateBooking;
    /**
     * URL builder for Loyalty Club assets.
     * @param loyaltyClubId The ID of the Loyalty Club entity.
     * @param options Options for the Loyalty Club's assets.
     */
    loyaltyClub(loyaltyClubId: string, options?: CdnStandardAssetOptions): CdnEntityAssets.Loyalty.Club;
    /**
     * URL builder for Loyalty Membership Program assets.
     * @param loyaltyMembershipProgramId The ID of the Loyalty Membership Program entity.
     * @param options Options for the Loyalty Membership Program's assets.
     */
    loyaltyMembershipProgram(loyaltyMembershipProgramId: string, options?: CdnStandardAssetOptions): CdnEntityAssets.Loyalty.MembershipProgram;
    /**
     * URL builder for Loyalty Reward Shop Item assets.
     * @param loyaltyRewardShopItemId The ID of the Loyalty Reward Shop Item entity.
     * @param options Options for the Loyalty Reward Shop Item's assets.
     */
    loyaltyRewardShopItem(loyaltyRewardShopItemId: string, options?: CdnStandardAssetOptions): CdnEntityAssets.Loyalty.RewardShopItem;
    /**
     * Constructs and returns a URL for a CDN asset.
     * @param mediaType The CDN media type for the asset.
     * @param entityId The ID of the entity.
     * @param options Options for the asset.
     */
    getAssetUrl(mediaType: CdnMediaType, entityId: string, options?: CdnAssetOptions): string;
    /**
     * Creates a URL builder for a given entity.
     * @param entityId The ID of the entity.
     * @param options The option for the entity.
     */
    private getUrlBuilderForEntity;
    /**
     * Creates a query string for a CDN asset URL based on the supplied options.
     * @param options The options for the URL.
     */
    private getQueryStringForOptions;
}
