import { CdnReferenceScheme } from './cdn-reference-scheme';
/**
 * Options for a CDN client.
 */
export interface CdnClientOptions extends CdnStandardAssetOptions {
}
/**
 * Options for a standard CDN asset.
 */
export interface CdnStandardAssetOptions {
    /**
     * Defines the nature of the specified entity ID parameter.
     */
    referenceScheme?: CdnReferenceScheme;
    /**
     * The security token used to access CDN assets.
     */
    mediaApiToken?: string;
    /**
     * The desired width of the media (in pixels).
     *
     * When the CDN's .ini configuration setting `DynamicProcessingEnabled` is set to `True`,
     * the returned image will be resized to as close to the specified dimensions as possible.
     *
     * When `DynamicProcessingEnabled` is set to `False`, the uploaded file closest to the specified dimensions will be returned.
     */
    width?: number;
    /**
     * The desired height of the media (in pixels).
     *
     * When the CDN's .ini configuration setting `DynamicProcessingEnabled` is set to `True`,
     * the returned image will be resized to as close to the specified dimensions as possible.
     *
     * When `DynamicProcessingEnabled` is set to `False`, the uploaded file closest to the specified dimensions will be returned.
     */
    height?: number;
    /**
     * Determines whether a default image is returned instead of a 404 error when a requested asset is unavailable.
     *
     * This is useful if you want placeholder images for media such as film posters, if the client does not handle this itself.
     *
     * If `false`: The CDN will return a 404 error for the request.
     *
     * If `true`: The CDN will look in the local folder on the disk for the specified media type and try to return the `default.png`
     * file. If that file is not found, a 404 error will be returned.
     */
    allowPlaceHolder?: boolean;
    /**
     * A pipe-delimited list of desired file formats in preference order.
     * If the media does not match one of these formats, a 404 error will be returned.
     *
     * For example: `'png|jpg|gif'`
     */
    fileFormat?: string;
}
/**
 * Options for a CDN gallery asset.
 */
export interface CdnGalleryAssetOptions extends CdnStandardAssetOptions {
    /**
     * Requests an image at a specific index in the gallery.
     */
    sequenceNumber?: number;
}
/**
 * Options for a CDN asset.
 */
export declare type CdnAssetOptions = CdnStandardAssetOptions | CdnGalleryAssetOptions;
