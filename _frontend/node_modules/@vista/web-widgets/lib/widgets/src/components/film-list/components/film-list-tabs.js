var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as React from 'react';
import { FilmCategory } from '../../../../../types/browsing/film-category';
import { Tab } from '../../tabs/tab';
import { Tabs } from '../../tabs/tabs';
import { FilmListMode } from '../types/config';
import { FilmListCarousel } from './film-list-carousel';
import { FilmListGrid } from './film-list-grid';
import { FilmListMessage, FilmListMessageType } from './film-list-message';
var FilmListTabs = /** @class */ (function (_super) {
    __extends(FilmListTabs, _super);
    function FilmListTabs() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FilmListTabs.prototype.render = function () {
        var _this = this;
        var _a = this.props, films = _a.films, config = _a.config, displayText = _a.displayText, assets = _a.assets, onFilmClicked = _a.onFilmClicked;
        var mode = config.mode, categories = config.categories;
        return (React.createElement(Tabs, { centered: true }, categories.map(function (category) {
            // We cannot use a <FilmTab> component here as the <Tabs> component needs it's children
            // to be an instance of <Tab> to work.
            var filteredFilms = _this.getFilmsForTab(films, category);
            var label = _this.getTabLabel(displayText, category);
            return (React.createElement(Tab, { key: category, label: label }, filteredFilms.length === 0 ?
                React.createElement(FilmListMessage, { messageType: FilmListMessageType.NoFilmsForTab, displayText: displayText, assets: assets, selectedTabLabel: label })
                : mode === FilmListMode.Carousel
                    ? React.createElement(FilmListCarousel, { films: filteredFilms, onFilmClicked: onFilmClicked })
                    : React.createElement(FilmListGrid, { films: filteredFilms, onFilmClicked: onFilmClicked })));
        })));
    };
    FilmListTabs.prototype.getFilmsForTab = function (films, category) {
        return films.filter(function (film) { return film.categories.includes(category); });
    };
    FilmListTabs.prototype.getTabLabel = function (displayText, category) {
        switch (category) {
            case FilmCategory.NowShowing: return displayText.tabNowShowingLabel;
            case FilmCategory.ComingSoon: return displayText.tabComingSoonLabel;
        }
    };
    return FilmListTabs;
}(React.Component));
export { FilmListTabs };
//# sourceMappingURL=film-list-tabs.js.map