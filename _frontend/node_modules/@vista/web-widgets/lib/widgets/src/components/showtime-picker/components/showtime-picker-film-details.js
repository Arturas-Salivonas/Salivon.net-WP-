import * as React from 'react';
import { browsingStoreInstance } from '../../../../../api/src/stores/browsing/browsing-store';
import { bemClassBuilderFactory } from '../../../utils/bem-class-builder';
import { Formatter } from '../../../utils/formatter';
import { getTranslatedTextOrDefault } from '../../../utils/get-translated-text';
import { CensorRatingIcon } from '../../censor-rating/censor-rating-icon';
function getFormattedFilmRuntime(template, runtimeMinutes) {
    return Formatter.Instance.template(template, {
        runtimeMinutes: runtimeMinutes,
    });
}
export var ShowtimePickerFilmDetails = function (_a) {
    var film = _a.film, browsingStore = _a.browsingStore, displayText = _a.displayText;
    var b = bemClassBuilderFactory('v-showtime-picker-film-details');
    var censorRating = film.censorRatingId ? browsingStoreInstance.selectors.getCensorRatingById(film.censorRatingId) : undefined;
    return (React.createElement("div", { className: b.block() },
        React.createElement("div", { className: b.element('heading') },
            React.createElement("h3", { className: b.element('title') }, getTranslatedTextOrDefault(film, 'title')),
            React.createElement(CensorRatingIcon, { censorRating: censorRating })),
        film.runtime &&
            React.createElement("p", { className: b.element('runtime') }, getFormattedFilmRuntime(displayText.runtimeFormat, film.runtime))));
};
//# sourceMappingURL=showtime-picker-film-details.js.map