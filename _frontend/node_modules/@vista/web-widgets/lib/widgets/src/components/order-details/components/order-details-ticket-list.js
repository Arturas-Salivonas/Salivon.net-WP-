var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { observer } from 'mobx-react';
import * as React from 'react';
import { groupJourneyOrderTicketsByIdAndPrice } from '../../../../../api/src/widgets-api/journey/utils/journey-order-ticket-utils';
import { bemClassBuilderFactory } from '../../../utils/bem-class-builder';
import { Formatter } from '../../../utils/formatter';
import { getTranslatedTextOrDefault } from '../../../utils/get-translated-text';
import { OrderDetailsListItem } from './order-details-list-item';
var OrderDetailsTicketList = /** @class */ (function (_super) {
    __extends(OrderDetailsTicketList, _super);
    function OrderDetailsTicketList() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.getFormattedLabelForTicketGroup = function (group) {
            var _a = _this.props, displayText = _a.displayText, journeyStore = _a.journeyStore;
            var ticketType = journeyStore.selectors.getTicketTypeById(group.ticketTypeId);
            return Formatter.Instance.template(displayText.itemDetails, {
                quantity: group.quantity,
                description: getTranslatedTextOrDefault(ticketType, 'description')
            });
        };
        return _this;
    }
    OrderDetailsTicketList.prototype.render = function () {
        var _this = this;
        var _a = this.props, tickets = _a.tickets, displayText = _a.displayText;
        if (!tickets || tickets.length === 0)
            return null;
        var groupedTickets = groupJourneyOrderTicketsByIdAndPrice(tickets);
        var b = bemClassBuilderFactory('v-order-details-ticket-list');
        return (React.createElement("div", { className: b.block() },
            React.createElement("h4", { className: b.element('heading') }, displayText.ticketsLabel),
            React.createElement("ul", { className: b.element('list') }, groupedTickets.map(function (group) {
                return React.createElement(OrderDetailsListItem, { key: group.firstOrderLineNumber, label: _this.getFormattedLabelForTicketGroup(group), price: group.totalPrice });
            }))));
    };
    OrderDetailsTicketList = __decorate([
        observer
    ], OrderDetailsTicketList);
    return OrderDetailsTicketList;
}(React.Component));
export { OrderDetailsTicketList };
//# sourceMappingURL=order-details-ticket-list.js.map