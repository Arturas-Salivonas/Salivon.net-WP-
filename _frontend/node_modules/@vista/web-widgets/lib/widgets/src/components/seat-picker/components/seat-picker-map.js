var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { observer } from 'mobx-react';
import * as React from 'react';
import { Logger } from '../../../../../api/src/utils/logger';
import { SeatPickerArea } from './seat-picker-area';
import { SeatPickerScreen } from './seat-picker-screen';
var SeatPickerMap = /** @class */ (function (_super) {
    __extends(SeatPickerMap, _super);
    function SeatPickerMap() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SeatPickerMap.prototype.render = function () {
        var _a = this.props, seatLayout = _a.seatLayout, config = _a.config, displayText = _a.displayText, isSeatFirstOrdering = _a.isSeatFirstOrdering, dimensions = _a.dimensions, boundary = _a.boundary, scaleFactor = _a.scaleFactor, onSeatClicked = _a.onSeatClicked;
        var width = dimensions.width, height = dimensions.height;
        return (React.createElement("svg", { className: "v-seat-picker-map", viewBox: "0 0 " + width + " " + height, preserveAspectRatio: "xMidYMid meet" },
            React.createElement("defs", null,
                React.createElement("linearGradient", { id: "v-seat-picker-screen-gradient", x1: "0%", y1: "0%", x2: "0%", y2: "100%" },
                    React.createElement("stop", { className: "v-seat-picker-screen-gradient__color-one", offset: "0%" }),
                    React.createElement("stop", { className: "v-seat-picker-screen-gradient__color-two", offset: "100%" }))),
            React.createElement(SeatPickerScreen, { seatLayout: seatLayout, scaleFactor: scaleFactor, config: config, displayText: displayText, mapBoundary: boundary }),
            seatLayout.areas.map(function (area) {
                var areaCategory = seatLayout.areaCategories
                    .find(function (category) { return category.areaCategoryCode === area.areaCategoryCode; });
                if (!areaCategory) {
                    Logger.error("Could not find area category '" + area.areaCategoryCode + "' for area '" + area.number + "'");
                    return undefined;
                }
                return (React.createElement(SeatPickerArea, { key: area.number.toString(), area: area, areaCategory: areaCategory, scaleFactor: scaleFactor, config: config, mapBoundary: boundary, onSeatClicked: onSeatClicked, limitSeatSelectionByAreaCategoryAllocation: isSeatFirstOrdering }));
            })));
    };
    SeatPickerMap = __decorate([
        observer
    ], SeatPickerMap);
    return SeatPickerMap;
}(React.Component));
export { SeatPickerMap };
//# sourceMappingURL=seat-picker-map.js.map