var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import { observer } from 'mobx-react';
import * as React from 'react';
import { bemClassBuilderFactory } from '../../utils/bem-class-builder';
import { Button, ButtonColor, ButtonSize } from '../button/button';
import { OrderCartItemList } from './components/order-cart-item-list';
import { OrderCartShowtimeList } from './components/order-cart-showtime-list';
import { OrderCartTotals } from './components/order-cart-totals';
/**
 * Renders a shopping cart widget that displays the current in-progress order.
 */
var OrderCart = /** @class */ (function (_super) {
    __extends(OrderCart, _super);
    function OrderCart(props) {
        var _this = _super.call(this, props) || this;
        _this.handleRemoveItem = function (orderItem) {
            var orderStore = _this.props.orderStore;
            orderStore.actions.removeItem(orderItem.id);
        };
        _this.handleActionButtonClicked = function () { return __awaiter(_this, void 0, void 0, function () {
            var onActionButtonClicked;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        onActionButtonClicked = this.props.onActionButtonClicked;
                        if (!onActionButtonClicked)
                            return [2 /*return*/];
                        this.setState({ isActionLoading: true });
                        return [4 /*yield*/, onActionButtonClicked()];
                    case 1:
                        _a.sent();
                        this.setState({ isActionLoading: false });
                        return [2 /*return*/];
                }
            });
        }); };
        _this.state = { isActionLoading: false };
        return _this;
    }
    OrderCart.prototype.render = function () {
        var _a = this.props, orderStore = _a.orderStore, salesDataStore = _a.salesDataStore, displayText = _a.displayText, assets = _a.assets, config = _a.config;
        var order = orderStore.data.order;
        var b = bemClassBuilderFactory('v-order-cart');
        return (React.createElement("div", { className: b.block() },
            React.createElement("header", { className: b.element('header') },
                React.createElement("h3", { className: b.element('title') }, displayText.title)),
            React.createElement(OrderCartShowtimeList, { orderShowtimes: order.showtimes, orderStore: orderStore, displayText: displayText }),
            React.createElement(OrderCartItemList, { orderItems: order.items, salesDataStore: salesDataStore, displayText: displayText, assets: assets, onRemoveItem: this.handleRemoveItem }),
            React.createElement("footer", { className: b.element('footer') },
                React.createElement(OrderCartTotals, { bookingFee: order.bookingFee, orderTotal: orderStore.selectors.getOrderTotalCost(), displayText: displayText }),
                config.actionButton.show &&
                    React.createElement(Button, { className: b.element('action-button'), color: ButtonColor.Primary, size: ButtonSize.Large, label: displayText.actionButtonLabel, onClick: this.handleActionButtonClicked, loading: this.state.isActionLoading }))));
    };
    OrderCart = __decorate([
        observer,
        __metadata("design:paramtypes", [Object])
    ], OrderCart);
    return OrderCart;
}(React.Component));
export { OrderCart };
//# sourceMappingURL=order-cart.js.map