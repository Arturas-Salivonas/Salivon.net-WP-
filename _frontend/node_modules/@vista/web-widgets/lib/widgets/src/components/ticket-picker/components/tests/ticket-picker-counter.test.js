import * as React from 'react';
import { compareToSnapshot } from '../../../../tests/compare-to-snapshot';
import { CounterStyle } from '../../../counter/counter';
import { TicketPickerCounter } from '../ticket-picker-counter';
describe('TicketPickerCounter', function () {
    var displayText = {
        counterLabel: 'Counter label'
    };
    it('should render info style correctly', function () {
        var orderStore = {
            selectors: {
                hasShowtime: jest.fn().mockReturnValue(true),
                getSelectedSeatsCountForShowtime: jest.fn().mockReturnValue(10),
                getSelectedTicketsCountForShowtime: jest.fn().mockReturnValue(20)
            }
        };
        var showtimeId = '1';
        compareToSnapshot(React.createElement(TicketPickerCounter, { orderStore: orderStore, showtimeId: showtimeId, style: CounterStyle.Info, displayText: displayText }));
        expect(orderStore.selectors.getSelectedSeatsCountForShowtime).toBeCalledWith(showtimeId);
        expect(orderStore.selectors.getSelectedTicketsCountForShowtime).toBeCalledWith(showtimeId);
    });
    it('should render warning style correctly', function () {
        var orderStore = {
            selectors: {
                hasShowtime: jest.fn().mockReturnValue(true),
                getSelectedSeatsCountForShowtime: jest.fn().mockReturnValue(5),
                getSelectedTicketsCountForShowtime: jest.fn().mockReturnValue(15)
            }
        };
        var showtimeId = '1';
        compareToSnapshot(React.createElement(TicketPickerCounter, { orderStore: orderStore, showtimeId: showtimeId, style: CounterStyle.Warning, displayText: displayText }));
        expect(orderStore.selectors.getSelectedSeatsCountForShowtime).toBeCalledWith(showtimeId);
        expect(orderStore.selectors.getSelectedTicketsCountForShowtime).toBeCalledWith(showtimeId);
    });
});
//# sourceMappingURL=ticket-picker-counter.test.js.map