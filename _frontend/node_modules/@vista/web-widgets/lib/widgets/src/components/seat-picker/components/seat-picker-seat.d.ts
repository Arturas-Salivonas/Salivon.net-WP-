import * as React from 'react';
import { Area } from '../../../../../types/seating/area';
import { Seat } from '../../../../../types/seating/seat';
import { SeatAvailability } from '../../../../../types/seating/seat-availability';
import { BemClassBuilder } from '../../../utils/bem-class-builder';
import { SeatPickerWidgetConfig } from '../types/config';
export interface SeatPickerSeatProps {
    seat: Seat;
    area: Area;
    rowLabel: string;
    scaleFactor: number;
    config: SeatPickerWidgetConfig;
    isSelectable: boolean;
    onSeatClicked: (selectedSeat: Seat) => void;
}
export declare class SeatPickerSeat extends React.Component<SeatPickerSeatProps> {
    seatElement?: HTMLElement;
    render(): JSX.Element;
    selectSeat: (resetFocus: any) => void;
    handleKeyPress: React.KeyboardEventHandler;
    handleClick: () => void;
    handleMouseDown: React.MouseEventHandler;
    getSeatIcon(seat: Seat, config: SeatPickerWidgetConfig): string | undefined | null;
    getAriaLabel(rowLabel: string, seatLabel: string, seat: Seat, isSelectable: boolean): string;
    getSeatClass(b: BemClassBuilder, seat: Seat, isSelectable: boolean): string;
    getSeatAvailabilityClassModifier(availability: SeatAvailability, isSelectable: boolean): string;
}
