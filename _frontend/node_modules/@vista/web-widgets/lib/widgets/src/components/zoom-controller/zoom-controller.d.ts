import * as React from 'react';
import { BemClassBuilder } from '../../utils/bem-class-builder';
import { Dimensions } from './utils/measurement-utils';
import { ContentTransformation } from './utils/transformation-utils';
import { ZoomHandler } from './utils/zoom-handler';
export interface ZoomControllerProps {
    className?: string;
    contentDimensions: Dimensions;
    showPanButtons?: boolean;
    showZoomButtons?: boolean;
    onContentTransformationChanged?: (transformation: ContentTransformation) => void;
}
export interface ZoomControllerPanAvailability {
    left: boolean;
    right: boolean;
    up: boolean;
    down: boolean;
}
export interface ZoomControllerZoomAvailability {
    in: boolean;
    out: boolean;
}
/**
 * Renders a ZoomController component that handles zooming and panning of a child element.
 * Supports mouse, keyboard and touch input.
 */
export declare class ZoomController extends React.Component<ZoomControllerProps> {
    private viewportRef;
    private contentRef;
    handler: ZoomHandler;
    constructor(props: ZoomControllerProps);
    resetZoom: () => void;
    render(): JSX.Element;
    getClass(b: BemClassBuilder, props: ZoomControllerProps): string;
    componentDidMount(): void;
    componentWillUnmount(): void;
    componentDidUpdate(): void;
    setUpHandler(props: ZoomControllerProps): void;
    handleKeyDown: React.KeyboardEventHandler;
    handleContentTransformationChanged: (transformation: ContentTransformation) => void;
}
