var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { journeyStoreInstance } from '../../../../../../api/src/stores/journey/journey-store';
import { exampleJourneyStoreData } from '../../../../../../example-data/journey/journey-store-data';
import { exampleJourneyOrderItem1, exampleJourneyOrderItem2 } from '../../../../../../example-data/journey/order-item';
import { compareToSnapshot } from '../../../../tests/compare-to-snapshot';
import { defaultOrderDetailsDisplayText } from '../../types/display-text';
import { OrderDetailsItemList } from '../order-details-item-list';
describe('OrderDetailsItemList', function () {
    beforeAll(function () {
        journeyStoreInstance.setData(exampleJourneyStoreData);
    });
    it('should render nothing when no items are passed in', function () {
        var testProps = {
            orderItems: [],
            journeyStore: journeyStoreInstance,
            displayText: defaultOrderDetailsDisplayText
        };
        compareToSnapshot(React.createElement(OrderDetailsItemList, __assign({}, testProps)));
    });
    it('should render a single item correctly', function () {
        var testProps = {
            orderItems: [exampleJourneyOrderItem1],
            journeyStore: journeyStoreInstance,
            displayText: defaultOrderDetailsDisplayText
        };
        compareToSnapshot(React.createElement(OrderDetailsItemList, __assign({}, testProps)));
    });
    it('should render a multiple items correctly', function () {
        var testProps = {
            orderItems: [
                exampleJourneyOrderItem1,
                exampleJourneyOrderItem2,
                exampleJourneyOrderItem2
            ],
            journeyStore: journeyStoreInstance,
            displayText: defaultOrderDetailsDisplayText
        };
        compareToSnapshot(React.createElement(OrderDetailsItemList, __assign({}, testProps)));
    });
});
//# sourceMappingURL=order-details-item-list.test.js.map