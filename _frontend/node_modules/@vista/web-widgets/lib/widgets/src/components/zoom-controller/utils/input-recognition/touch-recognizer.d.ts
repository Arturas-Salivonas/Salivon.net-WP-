import { Point } from '../measurement-utils';
import { InputRecognizer } from './input-recognizer';
export declare class TouchRecognizer extends InputRecognizer {
    private singleTapDelayThreshold;
    private singleTapPositionThreshold;
    private state;
    private singleTapDelayTimer;
    private singleTapDelayElapsed;
    private initialPinchDistance?;
    private touchStartEvents;
    private touchMoveEvents;
    private touchEndEvents;
    private onSingleTapHandler?;
    private onDoubleTapHandler?;
    private onPinchHandler?;
    constructor(singleTapDelayThreshold?: number, singleTapPositionThreshold?: number);
    onSingleTap: (onSingleTapHandler: (point: Point, target?: EventTarget | undefined) => void) => (point: Point, target?: EventTarget | undefined) => void;
    onDoubleTap: (onDoubleTapHandler: (point: Point, target?: EventTarget | undefined) => void) => (point: Point, target?: EventTarget | undefined) => void;
    onPinch: (onPinchHandler: (pinchScale: number, pinchCenter: Point) => void) => (pinchScale: number, pinchCenter: Point) => void;
    start: (event: TouchEvent) => void;
    move: (event: TouchEvent) => void;
    end: (event: TouchEvent) => void;
    protected reset(): void;
    private handlePinch;
    private handleFirstTap;
    private clearFirstTap;
    private tryResolveFirstTap;
    private resolveTap;
    private touchWasWithinSingleTapPositionThreshold;
}
