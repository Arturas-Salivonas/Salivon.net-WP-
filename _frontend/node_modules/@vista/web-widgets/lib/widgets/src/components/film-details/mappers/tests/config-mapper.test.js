import { defaultFilmDetailsWidgetConfig } from '../../types/config';
import { mapFilmDetailsConfig } from '../config-mapper';
describe('mapFilmDetailsConfig', function () {
    describe('returns default config', function () {
        it('when provided config is undefined', function () {
            var result = mapFilmDetailsConfig(undefined);
            expect(result).toEqual(defaultFilmDetailsWidgetConfig);
        });
        it('when the provided config is empty', function () {
            var result = mapFilmDetailsConfig({});
            expect(result).toEqual(defaultFilmDetailsWidgetConfig);
        });
        it('when the provided config is invalid', function () {
            var result = mapFilmDetailsConfig(1);
            expect(result).toEqual(defaultFilmDetailsWidgetConfig);
        });
    });
    describe('actionButton', function () {
        var defaultValue = defaultFilmDetailsWidgetConfig.actionButton;
        var testCases = [
            { value: undefined, expected: defaultValue },
            { value: null, expected: defaultValue },
            { value: {}, expected: defaultValue },
            { value: '', expected: defaultValue },
            { value: 0, expected: defaultValue },
            { value: { show: true }, expected: { show: true } },
            { value: { show: false }, expected: { show: false } }
        ];
        testCases.forEach(function (testCase) {
            it("returns " + JSON.stringify(testCase.expected) + " when " + JSON.stringify(testCase.value) + " is passed in", function () {
                var config = {
                    actionButton: testCase.value
                };
                var result = mapFilmDetailsConfig(config).actionButton;
                expect(result).toEqual(testCase.expected);
            });
        });
    });
});
//# sourceMappingURL=config-mapper.test.js.map