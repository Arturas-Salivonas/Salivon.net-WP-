var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as React from 'react';
import { bemClassBuilderFactory } from '../../../utils/bem-class-builder';
import { Icon } from '../../icon/icon';
import { SeatPickerWidgetShape } from '../types/config';
var SeatPickerLegendItemSeat = /** @class */ (function (_super) {
    __extends(SeatPickerLegendItemSeat, _super);
    function SeatPickerLegendItemSeat() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SeatPickerLegendItemSeat.prototype.render = function () {
        var _a = this.props, itemDetails = _a.itemDetails, config = _a.config;
        var icon = itemDetails.icon;
        var _b = config.legend, seatSize = _b.seatSize, seatIconSize = _b.seatIconSize, seatShape = _b.seatShape, seatBorderRadius = _b.seatBorderRadius, seatBorderWidth = _b.seatBorderWidth;
        var viewBoxSize = seatSize + (seatBorderWidth * 2);
        var svgIconSize = seatSize * seatIconSize / 100;
        var iconPosition = (viewBoxSize - svgIconSize) / 2;
        var parsedSeatBorderRadius = seatShape === SeatPickerWidgetShape.Round ? seatSize / 2 : seatBorderRadius;
        var b = bemClassBuilderFactory('v-seat-picker-legend-item-seat');
        return (React.createElement("svg", { className: b.block(), viewBox: "0 0 " + viewBoxSize + " " + viewBoxSize, width: viewBoxSize, height: viewBoxSize },
            React.createElement("g", null,
                React.createElement("rect", { className: b.element('background'), x: seatBorderWidth, y: seatBorderWidth, width: seatSize, height: seatSize, rx: parsedSeatBorderRadius, strokeWidth: seatBorderWidth }),
                icon &&
                    React.createElement(Icon, { name: icon, className: b.element('icon'), size: svgIconSize, x: iconPosition, y: iconPosition }))));
    };
    return SeatPickerLegendItemSeat;
}(React.Component));
export { SeatPickerLegendItemSeat };
//# sourceMappingURL=seat-picker-legend-item-seat.js.map