var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { compareToSnapshot } from '../../../tests/compare-to-snapshot';
import { ItemPickerMessage, ItemPickerMessageType } from '../components/item-picker-message';
import { defaultItemPickerAssets } from '../types/assets';
import { defaultItemPickerDisplayText } from '../types/display-text';
describe('ItemPickerTests', function () {
    var testMessageProps = {
        messageType: ItemPickerMessageType.FailedToLoadData,
        displayText: defaultItemPickerDisplayText,
        assets: defaultItemPickerAssets
    };
    describe('Failed to load data', function () {
        it('should render the skeleton loader correctly', function () {
            compareToSnapshot(React.createElement(ItemPickerMessage, __assign({}, testMessageProps, { messageType: ItemPickerMessageType.FailedToLoadData })));
        });
    });
});
//# sourceMappingURL=item-picker-message.test.js.map