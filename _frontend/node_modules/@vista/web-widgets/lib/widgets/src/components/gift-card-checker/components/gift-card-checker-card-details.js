var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as React from 'react';
import { bemClassBuilderFactory } from '../../../utils/bem-class-builder';
import { Formatter } from '../../../utils/formatter';
var getFormattedExpiryDate = function (template, date) {
    return Formatter.Instance.template(template, { date: date });
};
/**
 * Renders the details of a given gift card.
 */
var GiftCardCheckerCardDetails = /** @class */ (function (_super) {
    __extends(GiftCardCheckerCardDetails, _super);
    function GiftCardCheckerCardDetails() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GiftCardCheckerCardDetails.prototype.render = function () {
        var _a = this.props, displayText = _a.displayText, cardDetails = _a.cardDetails;
        var b = bemClassBuilderFactory('v-gift-card-checker-card-details');
        return (React.createElement("ul", { className: b.block() },
            React.createElement("li", { className: b.element('detail') },
                React.createElement("span", { className: b.element('label') }, displayText.detailsCardNumberLabel),
                React.createElement("span", { className: b.element('value') }, cardDetails.cardNumber)),
            React.createElement("li", { className: b.element('detail') },
                React.createElement("span", { className: b.element('label') }, displayText.detailsBalanceLabel),
                React.createElement("span", { className: b.element('value') }, Formatter.Instance.currency(cardDetails.balance))),
            React.createElement("li", { className: b.element('detail') },
                React.createElement("span", { className: b.element('label') }, displayText.detailsExpiryDateLabel),
                React.createElement("span", { className: b.element('value') }, getFormattedExpiryDate(displayText.detailsExpiryDate, cardDetails.expiryDate)))));
    };
    return GiftCardCheckerCardDetails;
}(React.Component));
export { GiftCardCheckerCardDetails };
//# sourceMappingURL=gift-card-checker-card-details.js.map