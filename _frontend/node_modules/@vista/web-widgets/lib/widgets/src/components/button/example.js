var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as React from 'react';
import '../../scss/themes/dark/_all.scss';
// import '../../scss/themes/light/_all.scss';
import { Button, ButtonColor, ButtonSize } from './button';
var ButtonExample = /** @class */ (function (_super) {
    __extends(ButtonExample, _super);
    function ButtonExample() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ButtonExample.prototype.render = function () {
        return (React.createElement("div", null,
            React.createElement("h1", null, "Buttons"),
            React.createElement("hr", null),
            React.createElement("h2", null, "Primary Button"),
            React.createElement("h3", null, "States"),
            React.createElement(Button, { color: ButtonColor.Primary }, "Normal"),
            React.createElement(Button, { color: ButtonColor.Primary, loading: true }, "Loading"),
            React.createElement(Button, { color: ButtonColor.Primary, disabled: true }, "Disabled"),
            React.createElement("br", null),
            React.createElement("h3", null, "Sizes"),
            React.createElement(Button, { color: ButtonColor.Primary, size: ButtonSize.Small }, "Small"),
            React.createElement(Button, { color: ButtonColor.Primary, size: ButtonSize.Medium }, "Medium"),
            React.createElement(Button, { color: ButtonColor.Primary, size: ButtonSize.Large }, "Large"),
            React.createElement("hr", null),
            React.createElement("h2", null, "Secondary Button"),
            React.createElement("h3", null, "States"),
            React.createElement(Button, { color: ButtonColor.Secondary }, "Normal"),
            React.createElement(Button, { color: ButtonColor.Secondary, loading: true }, "Loading"),
            React.createElement(Button, { color: ButtonColor.Secondary, disabled: true }, "Disabled"),
            React.createElement("br", null),
            React.createElement("h3", null, "Sizes"),
            React.createElement(Button, { color: ButtonColor.Secondary, size: ButtonSize.Small }, "Small"),
            React.createElement(Button, { color: ButtonColor.Secondary, size: ButtonSize.Medium }, "Medium"),
            React.createElement(Button, { color: ButtonColor.Secondary, size: ButtonSize.Large }, "Large"),
            React.createElement("h2", null, "Tertiary Button"),
            React.createElement("h3", null, "States"),
            React.createElement(Button, { color: ButtonColor.Tertiary }, "Normal"),
            React.createElement(Button, { color: ButtonColor.Tertiary, loading: true }, "Loading"),
            React.createElement(Button, { color: ButtonColor.Tertiary, disabled: true }, "Disabled"),
            React.createElement("br", null),
            React.createElement("h3", null, "Sizes"),
            React.createElement(Button, { color: ButtonColor.Tertiary, size: ButtonSize.Small }, "Small"),
            React.createElement(Button, { color: ButtonColor.Tertiary, size: ButtonSize.Medium }, "Medium"),
            React.createElement(Button, { color: ButtonColor.Tertiary, size: ButtonSize.Large }, "Large")));
    };
    return ButtonExample;
}(React.Component));
export { ButtonExample };
//# sourceMappingURL=example.js.map