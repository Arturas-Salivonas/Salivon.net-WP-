import * as React from 'react';
import { Formatter } from '../../../utils/formatter';
import { Message } from '../../message/message';
export var FilmListMessageType;
(function (FilmListMessageType) {
    FilmListMessageType["NoFilmsForTab"] = "NoFilmsForTab";
    FilmListMessageType["FailedToLoadData"] = "FailedToLoadData";
})(FilmListMessageType || (FilmListMessageType = {}));
function getFormattedMessageForSelectedTab(template, selectedTabLabel) {
    return Formatter.Instance.template(template, { selectedTabLabel: selectedTabLabel });
}
function getIconName(messageType, assets) {
    switch (messageType) {
        case FilmListMessageType.NoFilmsForTab:
            return assets.noFilmsForTabIconName;
        case FilmListMessageType.FailedToLoadData:
            return assets.failedToLoadDataIconName;
    }
}
function getTitleString(messageType, displayText, selectedTabLabel) {
    switch (messageType) {
        case FilmListMessageType.NoFilmsForTab:
            return getFormattedMessageForSelectedTab(displayText.noFilmsForTabTitle, selectedTabLabel);
        case FilmListMessageType.FailedToLoadData:
            return displayText.failedToLoadDataTitle;
        default: return undefined;
    }
}
function getDescriptionString(messageType, displayText, selectedTabLabel) {
    switch (messageType) {
        case FilmListMessageType.NoFilmsForTab:
            return getFormattedMessageForSelectedTab(displayText.noFilmsForTabMessage, selectedTabLabel);
        case FilmListMessageType.FailedToLoadData:
            return displayText.failedToLoadDataMessage;
        default: return undefined;
    }
}
export var FilmListMessage = function (_a) {
    var messageType = _a.messageType, displayText = _a.displayText, assets = _a.assets, selectedTabLabel = _a.selectedTabLabel;
    return (React.createElement(Message, { icon: getIconName(messageType, assets), title: getTitleString(messageType, displayText, selectedTabLabel), description: getDescriptionString(messageType, displayText, selectedTabLabel), className: 'v-film-list-message' }));
};
//# sourceMappingURL=film-list-message.js.map