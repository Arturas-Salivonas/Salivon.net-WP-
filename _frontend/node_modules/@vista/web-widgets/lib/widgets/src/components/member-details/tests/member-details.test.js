var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { configurationStoreInstance } from '../../../../../api/src/stores/configuration/configuration-store';
import { loyaltyStoreInstance } from '../../../../../api/src/stores/loyalty/loyalty-store';
import { exampleLoyaltyMember } from '../../../../../example-data/loyalty/loyalty-member';
import { exampleLoyaltyStoreDataSignedIn } from '../../../../../example-data/loyalty/loyalty-store-data';
import { exampleMxAuthTokenPayload } from '../../../../../example-data/loyalty/mx-auth-token-payload';
import { compareToSnapshot } from '../../../tests/compare-to-snapshot';
import { MemberDetails } from '../member-details';
import { defaultMemberDetailsDisplayText } from '../types/display-text';
describe('MemberDetails', function () {
    var testProps = {
        loyaltyStore: loyaltyStoreInstance,
        displayText: defaultMemberDetailsDisplayText
    };
    beforeEach(function () {
        loyaltyStoreInstance.flush();
        configurationStoreInstance.flush();
    });
    it('should not render when the loading indicator is disabled', function () {
        configurationStoreInstance.setConfig({ enableLoadingIndicator: false });
        compareToSnapshot(React.createElement(MemberDetails, __assign({}, testProps)));
    });
    it('should not render QR code', function () {
        var memberWithoutCardNumber = __assign({}, exampleLoyaltyMember, { cardNumber: undefined });
        loyaltyStoreInstance.setData({
            authTokenPayload: exampleMxAuthTokenPayload,
            signedInMemberDetails: memberWithoutCardNumber
        });
        compareToSnapshot(React.createElement(MemberDetails, __assign({}, testProps)));
    });
    it('should render without club name', function () {
        var memberDetails = __assign({}, exampleLoyaltyMember, { clubName: undefined });
        loyaltyStoreInstance.setData({
            authTokenPayload: exampleMxAuthTokenPayload,
            signedInMemberDetails: memberDetails
        });
        compareToSnapshot(React.createElement(MemberDetails, __assign({}, testProps)));
    });
    it('should not render when loyalty member is undefined', function () {
        loyaltyStoreInstance.setData({
            authTokenPayload: exampleMxAuthTokenPayload,
            signedInMemberDetails: undefined
        });
        compareToSnapshot(React.createElement(MemberDetails, __assign({}, testProps)));
    });
    it('should render correctly', function () {
        loyaltyStoreInstance.setData(exampleLoyaltyStoreDataSignedIn);
        compareToSnapshot(React.createElement(MemberDetails, __assign({}, testProps)));
    });
});
//# sourceMappingURL=member-details.test.js.map