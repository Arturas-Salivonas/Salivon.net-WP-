var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { SignInType } from '../../../../types/loyalty/authentication/sign-in-provider';
// import '../../scss/themes/dark/sign-in.scss';
import '../../scss/themes/light/sign-in.scss';
import { SignIn, SignInDisplayMode } from './sign-in';
import { defaultSignInDisplayText } from './types/display-text';
var exampleAuthClaims = {
    givenName: 'Incredible',
    memberId: 'A000001'
};
var exampleResponse = {
    authTokenPayload: exampleAuthClaims,
    memberDetails: undefined
};
var signInProviders = [
    { name: 'Facebook', type: SignInType.SocialAccount, icon: 'facebook-logo', signIn: function () { return Promise.resolve(exampleResponse); } },
    { name: 'twitter', type: SignInType.SocialAccount, icon: 'twitter-logo', signIn: function () { return Promise.resolve(exampleResponse); } },
    { name: 'Google', type: SignInType.SocialAccount, icon: 'google-logo', signIn: function () { return Promise.resolve(exampleResponse); } },
    {
        name: 'email',
        icon: 'email',
        type: SignInType.EmailPassword,
        signIn: function (username, password) { return Promise.resolve(exampleResponse); },
    },
    {
        name: 'Username',
        icon: 'person',
        type: SignInType.UsernamePassword,
        signIn: function (username, password) { return Promise.resolve(exampleResponse); }
    }
];
var signInProps = {
    displayMode: SignInDisplayMode.FadeIn,
    displayText: defaultSignInDisplayText,
    providers: signInProviders,
    captchaConfig: {
        siteKey: '6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI'
    }
};
var SignInExample = /** @class */ (function (_super) {
    __extends(SignInExample, _super);
    function SignInExample() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SignInExample.prototype.render = function () {
        return (React.createElement("div", { style: { width: '304px', margin: '0 auto' } },
            React.createElement(SignIn, __assign({}, signInProps))));
    };
    return SignInExample;
}(React.Component));
export { SignInExample };
//# sourceMappingURL=example.js.map