import { getTranslatedTextOrDefault } from '../../../utils/get-translated-text';
import { CdnClient } from './../../../utils/cdn-client';
export function getCommonAttributes(allShowtimeAttributes) {
    var attributeArrays = allShowtimeAttributes
        .map(function (showtimeAttrs) { return getShowtimeAttributesEligibleForGrouping(showtimeAttrs); })
        .sort(function (array1, array2) { return array1.length - array2.length; });
    if (attributeArrays.length === 0 || attributeArrays.find(function (element) { return element.length === 0; }))
        return [];
    var firstSessionAttributes = attributeArrays[0];
    return firstSessionAttributes.filter(function (testAttribute) {
        return attributeArrays.slice(1).every(function (otherSessionAttributes) {
            return otherSessionAttributes.some(function (sessionAttribute) { return sessionAttribute.id === testAttribute.id; });
        });
    });
}
export function heroAttributeForShowtime(allAttributes) {
    if (allAttributes) {
        var heroes = allAttributes
            .filter(function (attr) { return attr.displayPriority === 1 && !attr.isPromoted; })
            .sort(sortAttributes);
        if (heroes.length > 0)
            return heroes[0];
    }
    return undefined;
}
export function promotedAttributeForShowtime(allAttributes) {
    if (allAttributes) {
        var promoted = allAttributes
            .filter(function (attr) { return attr.isPromoted; })
            .sort(sortAttributes);
        if (promoted.length > 0)
            return promoted[0];
    }
    return undefined;
}
export function standardAttributesForShowtime(allAttributes, excludeIds) {
    if (allAttributes) {
        var hero_1 = heroAttributeForShowtime(allAttributes);
        return allAttributes
            .filter(function (attr) {
            if (attr.isPromoted)
                return false;
            if (attr === hero_1)
                return false;
            if (excludeIds && excludeIds.findIndex(function (id) { return id === attr.id; }) !== -1)
                return false;
            return true;
        }).sort(sortAttributes);
    }
    return [];
}
export function sortAttributes(attribute1, attribute2) {
    if (attribute1.displayPriority !== attribute2.displayPriority) {
        return attribute1.displayPriority - attribute2.displayPriority;
    }
    if (attribute1.shortName && attribute2.shortName) {
        if (attribute1.shortName === attribute2.shortName)
            return 0;
        return (attribute1.shortName < attribute2.shortName) ? -1 : 1;
    }
    if (attribute1.shortName && !attribute2.shortName)
        return -1;
    if (!attribute1.shortName && attribute2.shortName)
        return 1;
    return 0;
}
export function getAccessibilityDescriptionForAttribute(attribute) {
    return getTranslatedTextOrDefault(attribute, 'description');
}
function getShowtimeAttributesEligibleForGrouping(allAttributes) {
    if (!allAttributes)
        return [];
    return allAttributes.filter(function (attribute) {
        if (attribute.isPromoted)
            return false;
        if (attribute === heroAttributeForShowtime(allAttributes))
            return false;
        return true;
    });
}
export var getAttributeCdnUrl = function (attribute) {
    return CdnClient.Instance.attribute(attribute.id).icon();
};
//# sourceMappingURL=showtime-picker-attribute-utilities.js.map