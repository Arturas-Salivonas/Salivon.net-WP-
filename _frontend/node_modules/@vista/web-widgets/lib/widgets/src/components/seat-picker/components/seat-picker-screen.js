var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as React from 'react';
import { SvgPathHelper } from '../../../dom/svg-helpers';
import { bemClassBuilderFactory } from '../../../utils/bem-class-builder';
import { getScreenBoundary } from '../positioning/screen';
import { SeatPickerWidgetScreenPosition } from '../types/config';
var SeatPickerScreen = /** @class */ (function (_super) {
    __extends(SeatPickerScreen, _super);
    function SeatPickerScreen() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SeatPickerScreen.prototype.render = function () {
        var _a = this.props, seatLayout = _a.seatLayout, scaleFactor = _a.scaleFactor, config = _a.config, displayText = _a.displayText, mapBoundary = _a.mapBoundary;
        var _b = getScreenBoundary(seatLayout, mapBoundary, scaleFactor, config), top = _b.top, left = _b.left, width = _b.width, height = _b.height;
        var label = displayText.screenLabel;
        var screenBackgroundPath = getScreenBackgroundPath(width, height, config);
        var b = bemClassBuilderFactory('v-seat-picker-screen');
        return (React.createElement("svg", { className: b.block(), x: left, y: top },
            React.createElement("path", { className: b.element('background'), d: screenBackgroundPath }),
            (label && label.length > 0) &&
                React.createElement("text", { className: b.element('text'), x: width / 2, y: height / 2, dominantBaseline: "central", alignmentBaseline: "central", textAnchor: "middle" }, label)));
    };
    return SeatPickerScreen;
}(React.Component));
export { SeatPickerScreen };
export function getScreenBackgroundPath(width, height, config) {
    var bevelOffset = config.screen.bevelOffset;
    if (config.screen.position === SeatPickerWidgetScreenPosition.Top) {
        return new SvgPathHelper()
            .moveTo(0, 0)
            .drawLineRight(width)
            .drawLineTo(width - bevelOffset, height, true)
            .drawLineLeft(width - (bevelOffset * 2))
            .drawLineTo(0, 0, true)
            .closePath()
            .toString();
    }
    else {
        return new SvgPathHelper()
            .moveTo(bevelOffset, 0)
            .drawLineRight(width - (bevelOffset * 2))
            .drawLineTo(width, height, true)
            .drawLineLeft(width)
            .drawLineTo(bevelOffset, 0, true)
            .closePath()
            .toString();
    }
}
//# sourceMappingURL=seat-picker-screen.js.map