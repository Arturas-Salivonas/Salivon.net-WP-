import { observer } from 'mobx-react';
import * as React from 'react';
import { Field } from '../../form/field/field';
import { FormElementStyle } from '../../form/form-element-style';
import { Input } from '../../form/input/input';
export var FamilyNameField = observer(function (_a) {
    var customerDetails = _a.customerDetails, displayText = _a.displayText, onChange = _a.onChange, error = _a.error, maxLength = _a.maxLength;
    var errorMessage = error();
    return (React.createElement(Field, { id: "v-customer-details-form__family-name", label: displayText.fieldFamilyNameLabel, name: "familyName", helpText: errorMessage, style: errorMessage ? FormElementStyle.Warning : FormElementStyle.Normal },
        React.createElement(Input, { type: "text", value: customerDetails.familyName, placeholder: displayText.fieldFamilyNamePlaceholder, onChange: onChange, maxLength: maxLength })));
});
export var GivenNameField = observer(function (_a) {
    var customerDetails = _a.customerDetails, displayText = _a.displayText, onChange = _a.onChange, error = _a.error, maxLength = _a.maxLength;
    var errorMessage = error();
    return (React.createElement(Field, { id: "v-customer-details-form__given-name", label: displayText.fieldGivenNameLabel, name: "givenName", helpText: errorMessage, style: errorMessage ? FormElementStyle.Warning : FormElementStyle.Normal },
        React.createElement(Input, { type: "text", value: customerDetails.givenName, placeholder: displayText.fieldGivenNamePlaceholder, onChange: onChange, maxLength: maxLength })));
});
export var PhoneNumberField = observer(function (_a) {
    var customerDetails = _a.customerDetails, displayText = _a.displayText, onChange = _a.onChange, error = _a.error, maxLength = _a.maxLength;
    var errorMessage = error();
    return (React.createElement(Field, { id: "v-customer-details-form__phone", label: displayText.fieldPhoneLabel, name: "phone", helpText: errorMessage, style: errorMessage ? FormElementStyle.Warning : FormElementStyle.Normal },
        React.createElement(Input, { type: "tel", placeholder: displayText.fieldPhonePlaceholder, value: customerDetails.phone, onChange: onChange, maxLength: maxLength })));
});
export var EmailField = observer(function (_a) {
    var customerDetails = _a.customerDetails, displayText = _a.displayText, onChange = _a.onChange, error = _a.error, maxLength = _a.maxLength;
    var errorMessage = error();
    return (React.createElement(Field, { id: "v-customer-details-form__email", label: displayText.fieldEmailLabel, name: "email", helpText: errorMessage, style: errorMessage ? FormElementStyle.Warning : FormElementStyle.Normal },
        React.createElement(Input, { type: "email", value: customerDetails.email, placeholder: displayText.fieldEmailPlaceholder, onChange: onChange, maxLength: maxLength })));
});
//# sourceMappingURL=customer-details-fields.js.map