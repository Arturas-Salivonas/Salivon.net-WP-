import { getDatePickerDateValues } from './../utils';
describe('getDatePickerDateValues', function () {
    it('returns values between given range of dates when the current date is inside the range', function () {
        var businessDates = [
            '2019-01-01',
            '2019-01-02',
            '2019-01-03',
        ];
        var currentDate = new Date(businessDates[1]);
        jest.spyOn(Date, 'now').mockReturnValueOnce(currentDate.getTime());
        var result = getDatePickerDateValues(businessDates, businessDates[0]);
        var expectedResult = [
            { businessDate: '2019-01-01', isActive: true, isSelected: true },
            { businessDate: '2019-01-02', isActive: true, isSelected: false },
            { businessDate: '2019-01-03', isActive: true, isSelected: false }
        ];
        expect(result).toEqual(expectedResult);
    });
    it('returns values between the current date and last date in the given range when the current date is before the range', function () {
        var businessDates = [
            '2019-01-02',
            '2019-01-03',
            '2019-01-04',
        ];
        var currentDate = new Date('2019-01-01');
        jest.spyOn(Date, 'now').mockReturnValueOnce(currentDate.getTime());
        var result = getDatePickerDateValues(businessDates, businessDates[0]);
        var expectedResult = [
            { businessDate: '2019-01-01', isActive: false, isSelected: false },
            { businessDate: '2019-01-02', isActive: true, isSelected: true },
            { businessDate: '2019-01-03', isActive: true, isSelected: false },
            { businessDate: '2019-01-04', isActive: true, isSelected: false }
        ];
        expect(result).toEqual(expectedResult);
    });
    it('returns values between the given range, with unspecified dates as inactive', function () {
        var businessDates = [
            '2019-01-01',
            '2019-01-04'
        ];
        var currentDate = new Date(businessDates[0]);
        jest.spyOn(Date, 'now').mockReturnValueOnce(currentDate.getTime());
        var result = getDatePickerDateValues(businessDates, businessDates[0]);
        var expectedResult = [
            { businessDate: '2019-01-01', isActive: true, isSelected: true },
            { businessDate: '2019-01-02', isActive: false, isSelected: false },
            { businessDate: '2019-01-03', isActive: false, isSelected: false },
            { businessDate: '2019-01-04', isActive: true, isSelected: false }
        ];
        expect(result).toEqual(expectedResult);
    });
});
//# sourceMappingURL=utils.test.js.map