import { FormValidationResult } from '../../../../../api/src/utils/form-validation/form-validation-result';
import { NestedPartial } from '../../../../../types/nested-partial';
import { OrderCustomerDetails } from '../../../../../types/order/order-customer-details';
import { Bootstrapper, BootstrapResponse } from '../../../bootstrap/bootstrapper';
import { WidgetBootstrap } from '../../../bootstrap/widget-bootstrap';
import { CustomerDetailsForm } from '../customer-details-form';
import { CustomerDetailsFormWidgetConfig } from './config';
import { CustomerDetailsFormWidgetDisplayText } from './display-text';
import { CustomerDetailsFormWidgetEvents } from './events';
/**
 * Bootstrap options to render the customer details form widget.
 * @export
 * @interface CustomerDetailsFormWidgetBootstrap
 * @extends {WidgetBootstrap}
 */
export interface CustomerDetailsFormWidgetBootstrap extends WidgetBootstrap {
    /**
     * Events for the Customer Details Form widget.
     */
    events?: CustomerDetailsFormWidgetEvents;
    /**
     * Display text for the Customer Details Form widget.
     */
    displayText?: Partial<CustomerDetailsFormWidgetDisplayText>;
    /**
     * Configuration options for Customer Details widget.
     */
    config?: NestedPartial<CustomerDetailsFormWidgetConfig>;
}
export interface CustomerDetailsFormWidgetBootstrapResponse extends BootstrapResponse<CustomerDetailsForm> {
    /**
     * Validates the currently entered customer details.
     * Returns the overall validity of the form and if invalid the errors for each field.
     */
    validateCustomerDetails: () => Promise<FormValidationResult<OrderCustomerDetails>>;
}
export declare type CustomerDetailsFormWidgetBootstrapper = Bootstrapper<CustomerDetailsForm, CustomerDetailsFormWidgetBootstrap, CustomerDetailsFormWidgetBootstrapResponse>;
