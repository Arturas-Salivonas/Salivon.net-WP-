import { defaultGiftCardCheckerDisplayText } from '../../types/display-text';
import { mapGiftCardCheckerDisplayText } from '../display-text-mapper';
describe('mapGiftCardCheckerDisplayText', function () {
    it('returns the default display text when the provided display text is undefined', function () {
        var result = mapGiftCardCheckerDisplayText(undefined);
        expect(result).toEqual(defaultGiftCardCheckerDisplayText);
    });
    it('returns the default display text when the provided display text is empty', function () {
        var result = mapGiftCardCheckerDisplayText({});
        expect(result).toEqual(defaultGiftCardCheckerDisplayText);
    });
    it('returns the default display text when the provided display text is invalid', function () {
        var result = mapGiftCardCheckerDisplayText(1);
        expect(result).toEqual(defaultGiftCardCheckerDisplayText);
    });
    var propertyTestCases = function (defaultValue, allowNull) {
        if (allowNull === void 0) { allowNull = false; }
        return [
            { value: undefined, expected: allowNull ? undefined : defaultValue },
            { value: null, expected: allowNull ? null : defaultValue },
            { value: 0, expected: defaultValue },
            { value: '', expected: defaultValue },
            { value: {}, expected: defaultValue },
            { value: [], expected: defaultValue },
            { value: 'valid', expected: 'valid' },
        ];
    };
    describe('fieldCardNumberInputLabel', function () {
        var testCases = propertyTestCases(defaultGiftCardCheckerDisplayText.fieldCardNumberInputLabel);
        testCases.forEach(function (testCase) {
            it("returns '" + testCase.expected + "' when '" + testCase.value + "' is passed in", function () {
                var displayText = {
                    fieldCardNumberInputLabel: testCase.value
                };
                var result = mapGiftCardCheckerDisplayText(displayText);
                expect(result.fieldCardNumberInputLabel).toEqual(testCase.expected);
            });
        });
    });
    describe('fieldCardNumberPlaceholder', function () {
        var testCases = propertyTestCases(defaultGiftCardCheckerDisplayText.fieldCardNumberPlaceholder, true);
        testCases.forEach(function (testCase) {
            it("returns '" + testCase.expected + "' when '" + testCase.value + "' is passed in", function () {
                var displayText = {
                    fieldCardNumberPlaceholder: testCase.value
                };
                var result = mapGiftCardCheckerDisplayText(displayText);
                expect(result.fieldCardNumberPlaceholder).toEqual(testCase.expected);
            });
        });
    });
    describe('buttonSubmitLabel', function () {
        var testCases = propertyTestCases(defaultGiftCardCheckerDisplayText.buttonSubmitLabel);
        testCases.forEach(function (testCase) {
            it("returns '" + testCase.expected + "' when '" + testCase.value + "' is passed in", function () {
                var displayText = {
                    buttonSubmitLabel: testCase.value
                };
                var result = mapGiftCardCheckerDisplayText(displayText);
                expect(result.buttonSubmitLabel).toEqual(testCase.expected);
            });
        });
    });
    describe('buttonBackLabel', function () {
        var testCases = propertyTestCases(defaultGiftCardCheckerDisplayText.buttonBackLabel);
        testCases.forEach(function (testCase) {
            it("returns '" + testCase.expected + "' when '" + testCase.value + "' is passed in", function () {
                var displayText = {
                    buttonBackLabel: testCase.value
                };
                var result = mapGiftCardCheckerDisplayText(displayText);
                expect(result.buttonBackLabel).toEqual(testCase.expected);
            });
        });
    });
    describe('detailsCardNumberLabel', function () {
        var testCases = propertyTestCases(defaultGiftCardCheckerDisplayText.detailsCardNumberLabel);
        testCases.forEach(function (testCase) {
            it("returns '" + testCase.expected + "' when '" + testCase.value + "' is passed in", function () {
                var displayText = {
                    detailsCardNumberLabel: testCase.value
                };
                var result = mapGiftCardCheckerDisplayText(displayText);
                expect(result.detailsCardNumberLabel).toEqual(testCase.expected);
            });
        });
    });
    describe('detailsBalanceLabel', function () {
        var testCases = propertyTestCases(defaultGiftCardCheckerDisplayText.detailsBalanceLabel);
        testCases.forEach(function (testCase) {
            it("returns '" + testCase.expected + "' when '" + testCase.value + "' is passed in", function () {
                var displayText = {
                    detailsBalanceLabel: testCase.value
                };
                var result = mapGiftCardCheckerDisplayText(displayText);
                expect(result.detailsBalanceLabel).toEqual(testCase.expected);
            });
        });
    });
    describe('detailsExpiryDateLabel', function () {
        var testCases = propertyTestCases(defaultGiftCardCheckerDisplayText.detailsExpiryDateLabel);
        testCases.forEach(function (testCase) {
            it("returns '" + testCase.expected + "' when '" + testCase.value + "' is passed in", function () {
                var displayText = {
                    detailsExpiryDateLabel: testCase.value
                };
                var result = mapGiftCardCheckerDisplayText(displayText);
                expect(result.detailsExpiryDateLabel).toEqual(testCase.expected);
            });
        });
    });
    describe('detailsExpiryDate', function () {
        var testCases = propertyTestCases(defaultGiftCardCheckerDisplayText.detailsExpiryDate);
        testCases.forEach(function (testCase) {
            it("returns '" + testCase.expected + "' when '" + testCase.value + "' is passed in", function () {
                var displayText = {
                    detailsExpiryDate: testCase.value
                };
                var result = mapGiftCardCheckerDisplayText(displayText);
                expect(result.detailsExpiryDate).toEqual(testCase.expected);
            });
        });
    });
    describe('errorCardNumberRequiredMessage', function () {
        var testCases = propertyTestCases(defaultGiftCardCheckerDisplayText.errorCardNumberRequiredMessage);
        testCases.forEach(function (testCase) {
            it("returns '" + testCase.expected + "' when '" + testCase.value + "' is passed in", function () {
                var displayText = {
                    errorCardNumberRequiredMessage: testCase.value
                };
                var result = mapGiftCardCheckerDisplayText(displayText);
                expect(result.errorCardNumberRequiredMessage).toEqual(testCase.expected);
            });
        });
    });
    describe('errorCouldNotGetGiftCardDetailsMessage', function () {
        var testCases = propertyTestCases(defaultGiftCardCheckerDisplayText.errorCouldNotGetGiftCardDetailsMessage);
        testCases.forEach(function (testCase) {
            it("returns '" + testCase.expected + "' when '" + testCase.value + "' is passed in", function () {
                var displayText = {
                    errorCouldNotGetGiftCardDetailsMessage: testCase.value
                };
                var result = mapGiftCardCheckerDisplayText(displayText);
                expect(result.errorCouldNotGetGiftCardDetailsMessage).toEqual(testCase.expected);
            });
        });
    });
    describe('errorMissingCaptchaVerificationMessage', function () {
        var testCases = propertyTestCases(defaultGiftCardCheckerDisplayText.errorMissingCaptchaVerificationMessage);
        testCases.forEach(function (testCase) {
            it("returns '" + testCase.expected + "' when '" + testCase.value + "' is passed in", function () {
                var displayText = {
                    errorMissingCaptchaVerificationMessage: testCase.value
                };
                var result = mapGiftCardCheckerDisplayText(displayText);
                expect(result.errorMissingCaptchaVerificationMessage).toEqual(testCase.expected);
            });
        });
    });
});
//# sourceMappingURL=display-text-mapper.test.js.map