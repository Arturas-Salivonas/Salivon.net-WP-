var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as React from 'react';
import { bemClassBuilderFactory } from '../../../utils/bem-class-builder';
import { SeatPickerLegendItem } from './seat-picker-legend-item';
var SeatPickerLegend = /** @class */ (function (_super) {
    __extends(SeatPickerLegend, _super);
    function SeatPickerLegend() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SeatPickerLegend.prototype.render = function () {
        var _a = this.props, config = _a.config, displayText = _a.displayText;
        var items = this.getItemArray(config.legend.items, displayText);
        var b = bemClassBuilderFactory('v-seat-picker-legend');
        return (React.createElement("ul", { className: b.block() }, items.map(function (item) {
            return React.createElement(SeatPickerLegendItem, { itemDetails: item, key: item.name + item.index.toString(), config: config });
        })));
    };
    SeatPickerLegend.prototype.getItemArray = function (config, displayText) {
        var items = [];
        for (var name_1 in config) {
            var itemConfig = config[name_1];
            if (itemConfig.show) {
                items.push({
                    name: name_1,
                    icon: itemConfig.icon,
                    index: itemConfig.index,
                    label: this.getLabelForItem(displayText, name_1)
                });
            }
        }
        items.sort(function (a, b) { return a.index - b.index; });
        return items;
    };
    SeatPickerLegend.prototype.getLabelForItem = function (displayText, name) {
        switch (name.toLowerCase()) {
            case 'available': return displayText.legendItemAvailableLabel;
            case 'unavailable': return displayText.legendItemUnavailableLabel;
            case 'selected': return displayText.legendItemSelectedLabel;
            case 'wheelchair': return displayText.legendItemWheelchairLabel;
            case 'companion': return displayText.legendItemCompanionLabel;
            case 'friend': return displayText.legendItemFriendLabel;
            default: return '';
        }
    };
    return SeatPickerLegend;
}(React.Component));
export { SeatPickerLegend };
//# sourceMappingURL=seat-picker-legend.js.map