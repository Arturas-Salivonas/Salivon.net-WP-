var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as React from 'react';
import { browsingStoreInstance } from '../../../../../api/src/stores/browsing/browsing-store';
import { bemClassBuilderFactory } from '../../../utils/bem-class-builder';
import { getTranslatedTextOrDefault } from '../../../utils/get-translated-text';
import { FilmPoster } from '../../film-poster/film-poster';
var FilmListFilm = /** @class */ (function (_super) {
    __extends(FilmListFilm, _super);
    function FilmListFilm() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleClick = function () { return _this.props.onClick(_this.props.film); };
        _this.getClassificationString = function (censorRating) {
            if (!censorRating)
                return null;
            var classification = getTranslatedTextOrDefault(censorRating, 'classification');
            return classification ? " (" + classification + ")" : null;
        };
        return _this;
    }
    FilmListFilm.prototype.render = function () {
        var film = this.props.film;
        var b = bemClassBuilderFactory('v-film-list-film');
        var censorRating = film.censorRatingId
            ? browsingStoreInstance.selectors.getCensorRatingById(film.censorRatingId)
            : undefined;
        return (React.createElement("li", { className: b.block() },
            React.createElement("a", { className: b.element('link'), onClick: this.handleClick },
                React.createElement("div", { className: b.element('poster') },
                    React.createElement(FilmPoster, { film: film })),
                React.createElement("h3", { className: b.element('title') },
                    film.title,
                    this.getClassificationString(censorRating)))));
    };
    return FilmListFilm;
}(React.Component));
export { FilmListFilm };
//# sourceMappingURL=film-list-film.js.map