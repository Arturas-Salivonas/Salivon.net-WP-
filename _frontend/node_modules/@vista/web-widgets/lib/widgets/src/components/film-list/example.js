var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { browsingStoreInstance } from '../../../../api/src/stores/browsing/browsing-store';
import { exampleBrowsingStoreData } from '../../../../example-data/browsing/browsing-store-data';
import '../../scss/themes/dark/film-list.scss';
// import '../../scss/themes/light/film-list.scss';
import { FilmListMessage, FilmListMessageType } from './components/film-list-message';
import { FilmListSkeleton } from './components/film-list-skeleton';
import { FilmList } from './film-list';
import { defaultFilmListAssets } from './types/assets';
import { defaultFilmListConfig, FilmListMode } from './types/config';
import { defaultFilmListDisplayText } from './types/display-text';
browsingStoreInstance.setData(exampleBrowsingStoreData);
var testProps = {
    config: defaultFilmListConfig,
    onFilmClicked: function (film) { return console.log("Film clicked: " + film.id); },
    displayText: defaultFilmListDisplayText,
    assets: defaultFilmListAssets
};
var testCarouselProps = __assign({}, testProps, { config: __assign({}, testProps.config, { mode: FilmListMode.Carousel }) });
var testGridProps = __assign({}, testProps, { config: __assign({}, testProps.config, { mode: FilmListMode.Grid }) });
var testMessageProps = {
    messageType: FilmListMessageType.NoFilmsForTab,
    displayText: defaultFilmListDisplayText,
    assets: defaultFilmListAssets,
    selectedTabLabel: '[Tab Label]'
};
var FilmListExample = /** @class */ (function (_super) {
    __extends(FilmListExample, _super);
    function FilmListExample() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FilmListExample.prototype.render = function () {
        return (React.createElement("div", { style: { margin: '0 auto', padding: '20px', maxWidth: '1200px' } },
            React.createElement("h1", { className: 'v-example-header' }, "Film list"),
            React.createElement("h2", { className: 'v-example-header' }, "Carousel mode"),
            React.createElement(FilmList, __assign({}, testCarouselProps)),
            React.createElement("br", null),
            React.createElement("h2", { className: 'v-example-header' }, "Carousel mode skeleton"),
            React.createElement(FilmListSkeleton, { mode: FilmListMode.Carousel }),
            React.createElement("br", null),
            React.createElement("h2", { className: 'v-example-header' }, "Grid mode"),
            React.createElement(FilmList, __assign({}, testGridProps)),
            React.createElement("br", null),
            React.createElement("h2", { className: 'v-example-header' }, "Grid mode skeleton"),
            React.createElement(FilmListSkeleton, { mode: FilmListMode.Grid }),
            React.createElement("h2", { className: 'v-example-header' }, "Message"),
            React.createElement(FilmListMessage, __assign({}, testMessageProps))));
    };
    return FilmListExample;
}(React.Component));
export { FilmListExample };
//# sourceMappingURL=example.js.map