import { defaultMemberTransactionHistoryDisplayText } from '../../types/display-text';
import { mapMemberTransactionHistoryDisplayText } from '../display-text-mapper';
describe('mapMemberTransactionHistoryDisplayText', function () {
    it('returns the default display text when the provided display text is undefined', function () {
        var result = mapMemberTransactionHistoryDisplayText(undefined);
        expect(result).toEqual(defaultMemberTransactionHistoryDisplayText);
    });
    it('returns the default display text when the provided display text is invalid', function () {
        var result = mapMemberTransactionHistoryDisplayText(0);
        expect(result).toEqual(defaultMemberTransactionHistoryDisplayText);
    });
    var propertyTestCases = function (defaultValue, allowNull) {
        if (allowNull === void 0) { allowNull = false; }
        return [
            { value: undefined, expected: allowNull ? undefined : defaultValue },
            { value: null, expected: allowNull ? null : defaultValue },
            { value: 0, expected: defaultValue },
            { value: '', expected: defaultValue },
            { value: {}, expected: defaultValue },
            { value: [], expected: defaultValue },
            { value: 'valid', expected: 'valid' },
        ];
    };
    describe('tableColumnDateHeaderLabel', function () {
        var testCases = propertyTestCases(defaultMemberTransactionHistoryDisplayText.tableColumnDateHeaderLabel);
        testCases.forEach(function (testCase) {
            it("returns '" + testCase.expected + "' when '" + testCase.value + "' is passed in", function () {
                var displayText = {
                    tableColumnDateHeaderLabel: testCase.value
                };
                var result = mapMemberTransactionHistoryDisplayText(displayText);
                expect(result.tableColumnDateHeaderLabel).toEqual(testCase.expected);
            });
        });
    });
    describe('tableColumnDetailsHeaderLabel', function () {
        var testCases = propertyTestCases(defaultMemberTransactionHistoryDisplayText.tableColumnDetailsHeaderLabel);
        testCases.forEach(function (testCase) {
            it("returns '" + testCase.expected + "' when '" + testCase.value + "' is passed in", function () {
                var displayText = {
                    tableColumnDetailsHeaderLabel: testCase.value
                };
                var result = mapMemberTransactionHistoryDisplayText(displayText);
                expect(result.tableColumnDetailsHeaderLabel).toEqual(testCase.expected);
            });
        });
    });
    describe('tableColumnPointsHeaderLabel', function () {
        var testCases = propertyTestCases(defaultMemberTransactionHistoryDisplayText.tableColumnPointsHeaderLabel);
        testCases.forEach(function (testCase) {
            it("returns '" + testCase.expected + "' when '" + testCase.value + "' is passed in", function () {
                var displayText = {
                    tableColumnPointsHeaderLabel: testCase.value
                };
                var result = mapMemberTransactionHistoryDisplayText(displayText);
                expect(result.tableColumnPointsHeaderLabel).toEqual(testCase.expected);
            });
        });
    });
    describe('buttonLoadMoreLabel', function () {
        var testCases = propertyTestCases(defaultMemberTransactionHistoryDisplayText.buttonLoadMoreLabel);
        testCases.forEach(function (testCase) {
            it("returns '" + testCase.expected + "' when '" + testCase.value + "' is passed in", function () {
                var displayText = {
                    buttonLoadMoreLabel: testCase.value
                };
                var result = mapMemberTransactionHistoryDisplayText(displayText);
                expect(result.buttonLoadMoreLabel).toEqual(testCase.expected);
            });
        });
    });
});
//# sourceMappingURL=display-text-mapper.test.js.map