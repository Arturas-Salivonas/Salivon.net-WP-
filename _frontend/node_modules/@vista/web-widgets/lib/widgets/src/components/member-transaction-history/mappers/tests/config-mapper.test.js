import { defaultMemberTransactionHistoryConfig } from '../../types/config';
import { mapMemberTransactionHistoryConfig } from '../config-mapper';
describe('mapMemberTransactionHistoryConfig', function () {
    it('returns the default config when the provided config is undefined', function () {
        var result = mapMemberTransactionHistoryConfig(undefined);
        expect(result).toEqual(defaultMemberTransactionHistoryConfig);
    });
    it('returns the default config when the provided config is empty', function () {
        var result = mapMemberTransactionHistoryConfig({});
        expect(result).toEqual(defaultMemberTransactionHistoryConfig);
    });
    describe('numberOfTransactionsToLoad', function () {
        var defaultValue = defaultMemberTransactionHistoryConfig.numberOfTransactionsToLoad;
        var testCases = [
            { value: undefined, expected: defaultValue },
            { value: null, expected: defaultValue },
            { value: {}, expected: defaultValue },
            { value: '', expected: defaultValue },
            { value: 1, expected: 1 },
            { value: 1234, expected: 1234 },
            { value: 'unknown', expected: defaultValue }
        ];
        testCases.forEach(function (testCase) {
            it("returns " + JSON.stringify(testCase.expected) + " when " + JSON.stringify(testCase.value) + " is passed in", function () {
                var config = {
                    numberOfTransactionsToLoad: testCase.value
                };
                var result = mapMemberTransactionHistoryConfig(config).numberOfTransactionsToLoad;
                expect(result).toEqual(testCase.expected);
            });
        });
    });
});
//# sourceMappingURL=config-mapper.test.js.map