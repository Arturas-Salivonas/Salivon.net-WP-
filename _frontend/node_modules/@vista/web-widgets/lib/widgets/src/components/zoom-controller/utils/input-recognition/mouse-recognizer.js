var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { InputRecognizer } from './input-recognizer';
var MouseRecognizer = /** @class */ (function (_super) {
    __extends(MouseRecognizer, _super);
    function MouseRecognizer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.down = function (event) {
            _this.interactionStarted = true;
        };
        _this.move = function (event) {
            if (!_this.interactionStarted)
                return;
            if (_this.handlePan(event)) {
                _this.swallowNextClick = true;
            }
        };
        _this.click = function (event) {
            if (_this.swallowNextClick) {
                // prevent the click from being passed through if panning was started.
                event.preventDefault();
                event.stopImmediatePropagation();
                _this.swallowNextClick = false;
            }
        };
        _this.up = function (event) {
            _this.reset();
        };
        return _this;
    }
    MouseRecognizer.prototype.reset = function () {
        _super.prototype.reset.call(this);
        this.interactionStarted = false;
    };
    return MouseRecognizer;
}(InputRecognizer));
export { MouseRecognizer };
//# sourceMappingURL=mouse-recognizer.js.map