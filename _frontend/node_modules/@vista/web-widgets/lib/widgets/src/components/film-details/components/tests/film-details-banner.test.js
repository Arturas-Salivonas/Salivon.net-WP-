var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { browsingStoreInstance } from '../../../../../../api/src/stores/browsing/browsing-store';
import { exampleBrowsingStoreData } from '../../../../../../example-data/browsing/browsing-store-data';
import { exampleFilm } from '../../../../../../example-data/browsing/film';
import { FilmCategory } from '../../../../../../types/browsing/film-category';
import { compareToSnapshot } from '../../../../tests/compare-to-snapshot';
import { defaultFilmDetailsWidgetConfig } from '../../types/config';
import { defaultFilmDetailsWidgetDisplayText } from '../../types/display-text';
import { FilmDetailsBanner } from '../film-details-banner';
describe('FilmDetailsBanner', function () {
    var testProps = {
        film: exampleFilm,
        browsingStore: browsingStoreInstance,
        displayText: defaultFilmDetailsWidgetDisplayText,
        config: defaultFilmDetailsWidgetConfig
    };
    beforeAll(function () {
        browsingStoreInstance.setData(exampleBrowsingStoreData);
    });
    it('should render correctly', function () {
        compareToSnapshot(React.createElement(FilmDetailsBanner, __assign({}, testProps)));
    });
    it('should render without a status when the film has no categories', function () {
        var film = __assign({}, exampleFilm, { categories: [] });
        compareToSnapshot(React.createElement(FilmDetailsBanner, __assign({}, testProps, { film: film })));
    });
    it('should render with the "now showing" status when the film has the "now showing" category', function () {
        var film = __assign({}, exampleFilm, { categories: [FilmCategory.NowShowing] });
        compareToSnapshot(React.createElement(FilmDetailsBanner, __assign({}, testProps, { film: film })));
    });
    it('should render with the "coming soon" status when the film has the "coming soon" category', function () {
        var film = __assign({}, exampleFilm, { categories: [FilmCategory.ComingSoon] });
        compareToSnapshot(React.createElement(FilmDetailsBanner, __assign({}, testProps, { film: film })));
    });
    it('should render without the action button when it is disabled', function () {
        var config = __assign({}, defaultFilmDetailsWidgetConfig, { actionButton: { show: false } });
        compareToSnapshot(React.createElement(FilmDetailsBanner, __assign({}, testProps, { config: config })));
    });
});
//# sourceMappingURL=film-details-banner.test.js.map