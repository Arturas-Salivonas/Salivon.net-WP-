var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { fieldValidator } from '../../../../../api/src/utils/field-validator';
import { Validator } from '../../../../../api/src/utils/validator';
import { defaultOrderDetailsDisplayText } from '../types/display-text';
/**
 * Maps the display text provided via the API to the display text required by the Order Details widget.
 * Nulls out any invalid values and logs appropriate warnings.
 * Any undefined values will be replaced during mapping by the defaults.
 */
export function mapOrderDetailsDisplayText(displayText) {
    if (!displayText)
        return defaultOrderDetailsDisplayText;
    var valid = new Validator().ofType('object').validate(displayText, 'Order Details display text');
    if (!valid)
        return defaultOrderDetailsDisplayText;
    var validatedDisplayText = getValidatedOrderDetailsDisplayText(displayText);
    return __assign({}, defaultOrderDetailsDisplayText, validatedDisplayText);
}
/**
 * Validates the display text values provided for the Order Details widget.
 * Removes any invalid values and logs appropriate warnings.
 */
function getValidatedOrderDetailsDisplayText(displayText) {
    var validateField = fieldValidator(displayText);
    var validator = new Validator().ofType('string').minLength(1);
    validateField(validator, 'showtimeStartTimeDetails', 'Order Details showtimeStartTimeDetails');
    validateField(validator, 'itemDetails', 'Order Details itemDetails');
    validateField(validator, 'bookingFeeLabel', 'Order Details bookingFeeLabel');
    validateField(validator, 'totalCostLabel', 'Order Details totalCostLabel');
    validateField(validator, 'ticketsLabel', 'Order Details ticketsLabel');
    validateField(validator, 'itemsLabel', 'Order Details itemsLabel');
    validateField(validator, 'nextShowtimePendingHeading', 'Order Details nextShowtimePendingHeading');
    validateField(validator, 'nextShowtimeActiveHeading', 'Order Details nextShowtimeActiveHeading');
    validateField(validator, 'upcomingShowtimesHeading', 'Order Details upcomingShowtimesHeading');
    validateField(validator, 'expiredShowtimesHeading', 'Order Details expiredShowtimesHeading');
    validateField(validator, 'refundedShowtimesHeading', 'Order Details refundedShowtimesHeading');
    return displayText;
}
//# sourceMappingURL=display-text-mapper.js.map