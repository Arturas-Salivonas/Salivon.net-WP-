import { TicketSelectionValidationError } from '../../../../../../types/stores/order-store-data';
import { defaultTicketPickerDisplayText } from '../../types/display-text';
import { mapTicketPickerErrorMessage } from '../ticket-picker-error-message-mapper';
describe('mapTicketPickerErrorMessage', function () {
    var displayText = defaultTicketPickerDisplayText;
    var testCases = [
        { error: TicketSelectionValidationError.NoTicketsSelected, expected: displayText.errorNoTicketsSelectedMessage },
        { error: TicketSelectionValidationError.TooManyTickets, expected: displayText.errorTooManyTicketsSelectedMessage },
        { error: TicketSelectionValidationError.TooFewTickets, expected: displayText.errorTooFewTicketsSelectedMessage },
        { error: TicketSelectionValidationError.TicketsDoNotMatchSelectedSeats, expected: displayText.errorTicketsDoNotMatchAreaCategoriesMessage },
    ];
    testCases.forEach(function (testCase) {
        it("returns \"" + testCase.expected + "\" for error " + testCase.error, function () {
            var result = mapTicketPickerErrorMessage(testCase.error, displayText);
            expect(result).toEqual(testCase.expected);
        });
    });
    it('throws an error for an invalid value', function () {
        expect(function () { return mapTicketPickerErrorMessage(-1, displayText); }).toThrow();
    });
});
//# sourceMappingURL=ticket-picker-error-message-mapper.test.js.map