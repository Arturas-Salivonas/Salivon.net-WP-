var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { fieldValidator } from '../../../../../api/src/utils/field-validator';
import { Validator } from '../../../../../api/src/utils/validator';
import { defaultFilmDetailsWidgetDisplayText } from '../types/display-text';
export function mapFilmDetailsDisplayText(displayText) {
    if (!displayText)
        return defaultFilmDetailsWidgetDisplayText;
    var valid = new Validator().ofType('object').validate(displayText, 'Film Details display text');
    if (!valid)
        return defaultFilmDetailsWidgetDisplayText;
    var validatedDisplayText = getValidatedFilmDetailsDisplayText(displayText);
    return __assign({}, defaultFilmDetailsWidgetDisplayText, validatedDisplayText);
}
function getValidatedFilmDetailsDisplayText(displayText) {
    var validateField = fieldValidator(displayText);
    var validator = new Validator().ofType('string').minLength(1);
    validateField(validator, 'statusNowShowingLabel', 'Film Details statusNowShowingLabel');
    validateField(validator, 'statusComingSoonLabel', 'Film Details statusComingSoonLabel');
    validateField(validator, 'actionButtonLabel', 'Film Details actionButtonLabel');
    validateField(validator, 'directorsLabel', 'Film Details directorsLabel');
    validateField(validator, 'actorsLabel', 'Film Details actorsLabel');
    validateField(validator, 'plotLabel', 'Film Details plotLabel');
    validateField(validator, 'runtimeLabel', 'Film Details runtimeLabel');
    validateField(validator, 'runtime', 'Film Details runtime');
    validateField(validator, 'releaseDateLabel', 'Film Details releaseDateLabel');
    validateField(validator, 'releaseDate', 'Film Details releaseDate');
    return displayText;
}
//# sourceMappingURL=display-text-mapper.js.map