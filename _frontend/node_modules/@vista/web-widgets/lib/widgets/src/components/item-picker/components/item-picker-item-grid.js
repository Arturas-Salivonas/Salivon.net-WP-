var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as React from 'react';
import { sortArrayByProperty } from '../../../utils/array-utils';
import { bemClassBuilderFactory } from '../../../utils/bem-class-builder';
import { ItemPickerItemButton } from './item-picker-item-button';
var ItemPickerItemGrid = /** @class */ (function (_super) {
    __extends(ItemPickerItemGrid, _super);
    function ItemPickerItemGrid() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ItemPickerItemGrid.prototype.render = function () {
        var _a = this.props, itemButtons = _a.itemButtons, orderStore = _a.orderStore, salesDataStore = _a.salesDataStore, displayText = _a.displayText, onItemClicked = _a.onItemClicked;
        var sortedButtons = sortArrayByProperty(itemButtons, 'displaySequence');
        var b = bemClassBuilderFactory('v-item-picker-item-grid');
        return (React.createElement("ul", { className: b.block() }, sortedButtons.map(function (itemButton) {
            return React.createElement(ItemPickerItemButton, { key: itemButton.itemModelId, itemButton: itemButton, orderStore: orderStore, salesDataStore: salesDataStore, displayText: displayText, onClick: onItemClicked });
        })));
    };
    return ItemPickerItemGrid;
}(React.Component));
export { ItemPickerItemGrid };
//# sourceMappingURL=item-picker-item-grid.js.map