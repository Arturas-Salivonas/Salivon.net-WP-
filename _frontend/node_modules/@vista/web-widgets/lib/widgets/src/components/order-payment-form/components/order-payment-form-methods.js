var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { observer } from 'mobx-react';
import * as React from 'react';
import { bemClassBuilderFactory } from '../../../utils/bem-class-builder';
import { OrderPaymentFormMethod } from './order-payment-form-method';
var OrderPaymentFormMethods = /** @class */ (function (_super) {
    __extends(OrderPaymentFormMethods, _super);
    function OrderPaymentFormMethods() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    OrderPaymentFormMethods.prototype.render = function () {
        var _a = this.props, orderId = _a.orderId, paymentMethods = _a.paymentMethods, displayText = _a.displayText, onPaymentSuccessful = _a.onPaymentSuccessful, onPaymentFailed = _a.onPaymentFailed;
        var b = bemClassBuilderFactory('v-order-payment-form-methods');
        return (React.createElement("div", { className: b.block() },
            paymentMethods.length > 1 &&
                React.createElement("h3", { className: b.element('heading') }, displayText.paymentMethodsHeading),
            paymentMethods.map(function (method) {
                return React.createElement(OrderPaymentFormMethod, { key: method, orderId: orderId, displayText: displayText, paymentMethod: method, onPaymentSuccessful: onPaymentSuccessful, onPaymentFailed: onPaymentFailed });
            })));
    };
    OrderPaymentFormMethods = __decorate([
        observer
    ], OrderPaymentFormMethods);
    return OrderPaymentFormMethods;
}(React.Component));
export { OrderPaymentFormMethods };
//# sourceMappingURL=order-payment-form-methods.js.map