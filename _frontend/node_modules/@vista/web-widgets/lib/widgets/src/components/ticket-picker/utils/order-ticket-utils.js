import { isPackageTicketType } from '../../../../../api/src/services/order/utils/ticket-type-utils';
import { getTranslatedTextOrDefault } from '../../../utils/get-translated-text';
import { isVoucherTicket } from './../../../../../api/src/services/order/utils/order-ticket-utils';
import { orderStoreInstance } from './../../../../../api/src/stores/order/order-store';
export function getTicketSubDescription(ticketType, ticket) {
    if (isVoucherTicket(ticket))
        return getVoucherTicketSubDescription(ticket);
    if (isPackageTicketType(ticketType))
        return getPackageTicketTypeDescription(ticketType);
    return undefined;
}
function getVoucherTicketSubDescription(ticket) {
    var redemptionDetails = orderStoreInstance.selectors.getVoucherRedemptionDetails(ticket.barcode);
    return redemptionDetails.max > 1
        ? redemptionDetails.remaining + "/" + redemptionDetails.max + " available"
        : undefined;
}
function getPackageTicketTypeDescription(ticketType) {
    var packageContents = ticketType.packageContents;
    if (!packageContents)
        return undefined;
    var tickets = packageContents.tickets, items = packageContents.items;
    var ticketDescription = tickets ? tickets.reduce(function (acc, t) { return acc.concat([t.quantity + " " + getTranslatedTextOrDefault(t, 'description')]); }, []) : [];
    var descriptions = items
        ? items.reduce(function (acc, i) { return acc.concat([i.quantity + " " + getTranslatedTextOrDefault(i, 'description')]); }, ticketDescription)
        : ticketDescription;
    return descriptions.join(', ');
}
//# sourceMappingURL=order-ticket-utils.js.map