import { Component } from 'react';
import { SeatSelectionHandler } from '../../../../../api/src/stores/seating/helpers/types';
import { NestedPartial } from '../../../../../types/nested-partial';
import { Bootstrapper, BootstrapResponse } from '../../../bootstrap/bootstrapper';
import { WidgetBootstrap } from '../../../bootstrap/widget-bootstrap';
import { SeatPickerAssets } from './assets';
import { SeatPickerWidgetConfig } from './config';
import { SeatPickerWidgetDisplayText } from './display-text';
import { SeatPickerWidgetEvents } from './events';
/**
 * Bootstrap options to render the Seat Picker widget.
 * @export
 * @interface SeatPickerWidgetBootstrap
 * @extends {WidgetBootstrap}
 */
export interface SeatPickerWidgetBootstrap extends WidgetBootstrap {
    /**
     * The ID of the showtime in the order to select seats for.
     */
    showtimeId?: string;
    /**
     * Events for the Seat Picker widget.
     */
    events?: SeatPickerWidgetEvents;
    /**
     * Configuration options for the Seat Picker widget.
     */
    config?: NestedPartial<SeatPickerWidgetConfig, SeatPickerWidgetConfig['seatLayoutData'] | SeatPickerWidgetConfig['friendSeats'] | SeatSelectionHandler>;
    /**
     * Display text for the Seat Picker widget.
     */
    displayText?: Partial<SeatPickerWidgetDisplayText>;
    /**
     * Assets for the Seat Picker widget.
     */
    assets?: Partial<SeatPickerAssets>;
}
export interface SeatPickerWidgetBootstrapResponse extends BootstrapResponse<Component> {
    /**
     * Validates the currently selected seats. Returns true if the selections are valid, false if not.
     */
    validateSeatSelection: () => boolean;
    /**
     * Saves the current seat selection to the seating service.
     */
    saveSeatSelection: () => Promise<void>;
}
export declare type SeatPickerWidgetBootstrapper = Bootstrapper<Component, SeatPickerWidgetBootstrap, SeatPickerWidgetBootstrapResponse>;
