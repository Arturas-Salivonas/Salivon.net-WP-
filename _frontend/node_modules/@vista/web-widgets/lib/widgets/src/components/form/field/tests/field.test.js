var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { compareToSnapshot } from '../../../../tests/compare-to-snapshot';
import { FormElementStyle } from '../../form-element-style';
import { Input } from '../../input/input';
import { Field } from '../field';
describe('Field', function () {
    it('it should render the default Field component correctly', function () {
        var props = {
            id: 'field-id',
            name: 'field-name'
        };
        compareToSnapshot(React.createElement(Field, __assign({}, props),
            React.createElement(Input, null)));
    });
    it('it should render the Field component with label correctly', function () {
        var props = {
            id: 'field-id',
            name: 'field-name',
            label: 'field label'
        };
        compareToSnapshot(React.createElement(Field, __assign({}, props),
            React.createElement(Input, null)));
    });
    it('it should render the Field component with help text correctly', function () {
        var props = {
            id: 'field-id',
            name: 'field-name',
            helpText: 'field help text'
        };
        compareToSnapshot(React.createElement(Field, __assign({}, props),
            React.createElement(Input, null)));
    });
    it('it should render the Field component with label and help text correctly', function () {
        var props = {
            id: 'field-id',
            name: 'field-name',
            label: 'field label',
            helpText: 'field help text'
        };
        compareToSnapshot(React.createElement(Field, __assign({}, props),
            React.createElement(Input, null)));
    });
    it('it should render the warning Field component correctly', function () {
        var props = {
            id: 'field-id',
            name: 'field-name',
            label: 'field label',
            helpText: 'field help text',
            style: FormElementStyle.Warning
        };
        compareToSnapshot(React.createElement(Field, __assign({}, props),
            React.createElement(Input, null)));
    });
    it('it should render the error Field component correctly', function () {
        var props = {
            id: 'field-id',
            name: 'field-name',
            label: 'field label',
            helpText: 'field help text',
            style: FormElementStyle.Error
        };
        compareToSnapshot(React.createElement(Field, __assign({}, props),
            React.createElement(Input, null)));
    });
    it('it should render the success Field component correctly', function () {
        var props = {
            id: 'field-id',
            name: 'field-name',
            label: 'field label',
            helpText: 'field help text',
            style: FormElementStyle.Success
        };
        compareToSnapshot(React.createElement(Field, __assign({}, props),
            React.createElement(Input, null)));
    });
});
//# sourceMappingURL=field.test.js.map