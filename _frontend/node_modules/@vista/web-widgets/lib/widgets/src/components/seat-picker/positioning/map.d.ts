import { Area } from '../../../../../types/seating/area';
import { SeatLayout } from '../../../../../types/seating/seat-layout';
import { SeatPickerWidgetConfig, SeatPickerWidgetScreenPosition } from '../types/config';
import { SeatPickerBoundary, SeatPickerDimension } from '../types/seat-picker-measurements';
/**
 * Returns the scale factor (scale factor * % = dimension) of a seat layout map based on the minimum seat size.
 */
export declare function getMapScaleFactor(seatLayout: SeatLayout, config: SeatPickerWidgetConfig): number;
/**
 * Converts a seat layout percentage to a SVG unit using a scale factor.
 */
export declare function getMapDimension(percentage: number, scaleFactor: number): number;
/**
 * Returns the minimum seat size ratio of an area as a percentage (e.g. area.width of 50% / 10 seats = ratio of 5% per seat).
 */
export declare function getMinimumAreaSeatSizeRatio(area: Area): number;
/**
 * Returns the dimensions of the seat map in SVG units.
 */
export declare function getMapDimensions(boundary: SeatPickerBoundary, scaleFactor: number, config: SeatPickerWidgetConfig): SeatPickerDimension;
/**
 * Returns the boundary of the seat map in percentages.
 */
export declare function getMapBoundary(seatLayout: SeatLayout, position: SeatPickerWidgetScreenPosition): SeatPickerBoundary;
