import * as React from 'react';
import { FormElementProps } from '../form-element-props';
import { FormElementStyle } from '../form-element-style';
export interface NumberInputProps extends FormElementProps<number> {
    min?: number;
    max?: number;
    step?: number;
    type?: NumberInputType;
    icons?: NumberInputIcons;
}
export declare enum NumberInputType {
    Spinner = "Spinner",
    Basic = "Basic",
    Select = "Select"
}
export interface NumberInputIcons {
    plusButton?: string;
    minusButton?: string;
    selectButton?: string;
}
/**
 * Renders the number input component
 */
export declare class NumberInput extends React.Component<NumberInputProps> {
    value: number;
    min: number;
    max: number;
    step: number;
    type: NumberInputType;
    icons: NumberInputIcons;
    input?: HTMLElement;
    constructor(props: NumberInputProps);
    componentWillReceiveProps(props: NumberInputProps): void;
    updateProps(props: NumberInputProps): void;
    render(): JSX.Element;
    getInputClass(elementClass: string, style?: FormElementStyle): string;
    selectOptions(): JSX.Element[];
    handleChange: (event: any) => void;
    onChange: (newValue: number) => void;
    handleKeyDown: React.KeyboardEventHandler;
    handleWheel: React.WheelEventHandler;
    incrementValue: () => void;
    handleIncrement: (event: any) => void;
    decrementValue: () => void;
    handleDecrement: (event: any) => void;
}
