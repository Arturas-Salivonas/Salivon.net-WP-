var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { exampleBusinessDate } from '../../../../../example-data/browsing/business-date';
import { compareToSnapshot } from '../../../tests/compare-to-snapshot';
import { DatePickerDate } from '../date-picker-date';
describe('DatePickerDate', function () {
    it('should render active correctly', function () {
        var testProps = {
            value: {
                businessDate: exampleBusinessDate,
                isActive: true,
                isSelected: false
            },
            onClick: function () { return; }
        };
        compareToSnapshot(React.createElement(DatePickerDate, __assign({}, testProps)));
    });
    it('should render inactive correctly', function () {
        var testProps = {
            value: {
                businessDate: exampleBusinessDate,
                isActive: false,
                isSelected: false
            },
            onClick: function () { return; }
        };
        compareToSnapshot(React.createElement(DatePickerDate, __assign({}, testProps)));
    });
    it('should render selected correctly', function () {
        var testProps = {
            value: {
                businessDate: exampleBusinessDate,
                isActive: true,
                isSelected: true
            },
            onClick: function () { return; }
        };
        compareToSnapshot(React.createElement(DatePickerDate, __assign({}, testProps)));
    });
});
//# sourceMappingURL=date-picker-date.test.js.map