var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { Validator } from '../../../../../api/src/utils/validator';
import { defaultOrderPaymentFormDisplayText } from '../types/display-text';
export var mapOrderPaymentFormDisplayText = function (displayText) {
    if (!displayText)
        return defaultOrderPaymentFormDisplayText;
    var valid = new Validator().ofType('object').validate(displayText, 'Order Payment Form display text');
    if (!valid || !displayText)
        return defaultOrderPaymentFormDisplayText;
    var validatedDisplayText = getValidatedOrderPaymentFormDisplayText(displayText);
    return __assign({}, defaultOrderPaymentFormDisplayText, validatedDisplayText);
};
function getValidatedOrderPaymentFormDisplayText(displayText) {
    // const validateField = fieldValidator(displayText);
    // const validator = new Validator().ofType('string').minLength(1);
    // validateField(validator, 'x', 'Order Payment Form x');
    return displayText;
}
//# sourceMappingURL=display-text-mapper.js.map