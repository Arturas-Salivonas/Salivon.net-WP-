var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as React from 'react';
import { sortArrayByProperty } from '../../../utils/array-utils';
import { getTranslatedTextOrDefault } from '../../../utils/get-translated-text';
import { Tab } from '../../tabs/tab';
import { Tabs } from '../../tabs/tabs';
import { ItemPickerItemGrid } from './item-picker-item-grid';
var ItemPickerTabs = /** @class */ (function (_super) {
    __extends(ItemPickerTabs, _super);
    function ItemPickerTabs() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ItemPickerTabs.prototype.render = function () {
        var _a = this.props, buttonGroups = _a.buttonGroups, orderStore = _a.orderStore, salesDataStore = _a.salesDataStore, displayText = _a.displayText, onItemClicked = _a.onItemClicked;
        var filteredGroups = buttonGroups.filter(function (g) { return g.itemButtons.length > 0; });
        var sortedGroups = sortArrayByProperty(filteredGroups, 'displaySequence');
        return (React.createElement(Tabs, { centered: false }, sortedGroups.map(function (buttonGroup) {
            var label = getTranslatedTextOrDefault(buttonGroup, 'title') || ''; // todo?
            return (React.createElement(Tab, { key: buttonGroup.id, label: label },
                React.createElement(ItemPickerItemGrid, { itemButtons: buttonGroup.itemButtons, orderStore: orderStore, salesDataStore: salesDataStore, displayText: displayText, onItemClicked: onItemClicked })));
        })));
    };
    return ItemPickerTabs;
}(React.Component));
export { ItemPickerTabs };
//# sourceMappingURL=item-picker-tabs.js.map