var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { runInAction } from 'mobx';
import * as React from 'react';
import { configurationStoreInstance } from '../../../../api/src/stores/configuration/configuration-store';
import { journeyStoreInstance } from '../../../../api/src/stores/journey/journey-store';
// import '../../scss/themes/dark/order-summary.scss';
import '../../scss/themes/light/order-summary.scss';
import { Button } from '../button/button';
import { OrderSummarySkeleton } from './components/order-summary-skeleton';
import { OrderSummary } from './order-summary';
import { defaultOrderSummaryAssets } from './types/assets';
import { defaultOrderSummaryDisplayText } from './types/display-text';
window.journey = journeyStoreInstance;
var exampleProps = {
    // journeyId: '4a75f085-de80-4855-97c4-bb5d24664f63',
    journeyReference: 'c12ca439-cff6-4bc0-a6f6-988a9e6f4764',
    journeyStore: journeyStoreInstance,
    displayText: defaultOrderSummaryDisplayText,
    assets: defaultOrderSummaryAssets,
    cancelTimerWhenLastShowtimeIsInactive: false
};
var admittingDuration = configurationStoreInstance.data.ticketing.admittingDuration;
configurationStoreInstance.setConfig({ api: { url: 'http://localhost:52000', authToken: 'WWW1' } });
var OrderSummaryExample = /** @class */ (function (_super) {
    __extends(OrderSummaryExample, _super);
    function OrderSummaryExample() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.setPending = function () {
            _this.setShowtimeStartTime(admittingDuration + 0.5);
        };
        _this.setAdmitting = function () {
            _this.setShowtimeStartTime(admittingDuration);
        };
        _this.setNowPlaying = function () {
            _this.setShowtimeStartTime(0);
        };
        _this.setCollected = function () {
            _this.setShowtimeStartTime(0);
            // (bookingsStoreInstance.data.bookings[bookingExampleData.id] as any).showtimes[0].tickets.forEach(ticket => {
            //     ticket.collectedStatus = BookingCollectedStatus.Collected;
            // });
        };
        _this.setRefunded = function () {
            _this.setShowtimeStartTime(0);
            // (bookingsStoreInstance.data.bookings[bookingExampleData.id] as any).showtimes[0].tickets.forEach(ticket => {
            //     ticket.refundedStatus = BookingRefundedStatus.Refunded;
            // });
        };
        _this.setExpired = function () {
            _this.setShowtimeStartTime(-2000);
        };
        return _this;
    }
    OrderSummaryExample.prototype.render = function () {
        return (React.createElement("div", { style: { margin: '40px 0' } },
            React.createElement("h1", null, "Order summary"),
            React.createElement(OrderSummary, __assign({}, exampleProps)),
            React.createElement("br", null),
            React.createElement(Button, { label: "Pending", onClick: this.setPending }),
            React.createElement(Button, { label: "Admitting", onClick: this.setAdmitting }),
            React.createElement(Button, { label: "Now Playing", onClick: this.setNowPlaying }),
            React.createElement(Button, { label: "Collected", onClick: this.setCollected }),
            React.createElement(Button, { label: "Refunded", onClick: this.setRefunded }),
            React.createElement(Button, { label: "Expired", onClick: this.setExpired }),
            React.createElement("h2", null, "Skeleton"),
            React.createElement(OrderSummarySkeleton, __assign({}, exampleProps)),
            React.createElement("br", null)));
    };
    OrderSummaryExample.prototype.componentDidMount = function () {
        var _this = this;
        setTimeout(function () {
            runInAction(function () {
                // journeyStoreInstance.setData(exampleJourneyStoreData);
                _this.setPending();
            });
        }, 3000);
    };
    OrderSummaryExample.prototype.setShowtimeStartTime = function (minutesOffset) {
        // const currentTime = Date.now();
        // const offsetTime = currentTime + (minutesOffset * 60000);
        // (bookingsStoreInstance.data.bookings[bookingExampleData.id] as any).showtimes[0].startTime = new Date(offsetTime);
    };
    return OrderSummaryExample;
}(React.Component));
export { OrderSummaryExample };
//# sourceMappingURL=example.js.map