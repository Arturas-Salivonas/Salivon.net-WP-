import * as React from 'react';
import { ZoomHandler } from './utils/zoom-handler';
import { ZoomControllerPanAvailability, ZoomControllerZoomAvailability } from './zoom-controller';
export interface ZoomControllerButtonsProps {
    handler: ZoomHandler;
    showPanButtons?: boolean;
    showZoomButtons?: boolean;
}
export interface ZoomControllerButtonsState {
    panAvailability: ZoomControllerPanAvailability;
    zoomAvailability: ZoomControllerZoomAvailability;
}
export declare enum ButtonAction {
    PanUp = "PanUp",
    PanDown = "PanDown",
    PanLeft = "PanLeft",
    PanRight = "PanRight",
    ZoomIn = "ZoomIn",
    ZoomOut = "ZoomOut"
}
export declare class ZoomControllerButtons extends React.Component<ZoomControllerButtonsProps, ZoomControllerButtonsState> {
    constructor(props: ZoomControllerButtonsProps);
    render(): JSX.Element | null;
    onPanAvailabilityChanged: (availability: ZoomControllerPanAvailability) => void;
    onZoomAvailabilityChanged: (availability: ZoomControllerZoomAvailability) => void;
    getButtonAvailability: (action: ButtonAction) => boolean;
}
