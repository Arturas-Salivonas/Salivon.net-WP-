var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { compareToSnapshot } from '../../../tests/compare-to-snapshot';
import { QRCode } from '../qr-code';
var MockQrious = /** @class */ (function () {
    function MockQrious() {
        this.set = jest.fn;
    }
    return MockQrious;
}());
jest.mock('qrious', MockQrious);
describe('QRCode', function () {
    var testProps = {
        value: '1234'
    };
    var createNodeMock = function (element) {
        return element.type === 'canvas' ? document.createElement('canvas') : null;
    };
    it('should render correctly', function () {
        compareToSnapshot(React.createElement(QRCode, __assign({}, testProps)), { createNodeMock: createNodeMock });
    });
});
//# sourceMappingURL=qr-code.test.js.map