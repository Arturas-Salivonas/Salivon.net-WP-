var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { salesDataStoreInstance } from '../../../../../../api/src/stores/sales-data/sales-data-store';
import { exampleOrderItems } from '../../../../../../example-data/order/order-item';
import { exampleBasicCandyItemModel1, exampleBasicCandyItemModel2, exampleBasicCandyItemModel3 } from '../../../../../../example-data/sales-data/item-model-basic';
import { compareToSnapshot } from '../../../../tests/compare-to-snapshot';
import { defaultOrderCartAssets } from '../../types/assets';
import { defaultOrderCartDisplayText } from '../../types/display-text';
import { OrderCartItemList } from '../order-cart-item-list';
describe('OrderCartItemList', function () {
    beforeAll(function () {
        salesDataStoreInstance.data.itemModelsById = new Map([
            [exampleBasicCandyItemModel1.id, exampleBasicCandyItemModel1],
            [exampleBasicCandyItemModel2.id, exampleBasicCandyItemModel2],
            [exampleBasicCandyItemModel3.id, exampleBasicCandyItemModel3],
        ]);
    });
    it('should render correctly', function () {
        var testProps = {
            orderItems: exampleOrderItems,
            salesDataStore: salesDataStoreInstance,
            displayText: defaultOrderCartDisplayText,
            assets: defaultOrderCartAssets,
            onRemoveItem: function () { return; }
        };
        compareToSnapshot(React.createElement(OrderCartItemList, __assign({}, testProps)));
    });
    it('should return null if no items are passed in', function () {
        var testProps = {
            orderItems: [],
            salesDataStore: salesDataStoreInstance,
            displayText: defaultOrderCartDisplayText,
            assets: defaultOrderCartAssets,
            onRemoveItem: function () { return; }
        };
        compareToSnapshot(React.createElement(OrderCartItemList, __assign({}, testProps)));
    });
});
//# sourceMappingURL=order-cart-item-list.test.js.map