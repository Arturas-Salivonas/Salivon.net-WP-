var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { browsingService } from '../../../../api/src/services/browsing/browsing-service';
import { orderService } from '../../../../api/src/services/order/order-service';
import { browsingStoreInstance } from '../../../../api/src/stores/browsing/browsing-store';
import { configurationStoreInstance } from '../../../../api/src/stores/configuration/configuration-store';
import { orderStoreInstance } from '../../../../api/src/stores/order/order-store';
import { addWidgetBootstrap } from '../../bootstrap/add-widget-bootstrap';
import { createComponent } from '../../bootstrap/create-component';
import { mapShowtimePickerAssets } from './mappers/assets-mapper';
import { mapShowtimePickerConfig } from './mappers/config-mapper';
import { mapShowtimePickerDisplayText } from './mappers/display-text-mapper';
import { ShowtimePicker } from './showtime-picker';
/**
 * Renders the showtime picker form widget.
 * @param bootstrap
 */
export var showtimePicker = function (bootstrap) {
    var filmIds = bootstrap.filmIds, siteIds = bootstrap.siteIds, selectedDate = bootstrap.selectedDate, config = bootstrap.config, displayText = bootstrap.displayText, events = bootstrap.events, assets = bootstrap.assets, selector = bootstrap.selector;
    var props = {
        filmIds: filmIds || [],
        siteIds: siteIds,
        selectedBusinessDate: selectedDate,
        browsingStore: browsingStoreInstance,
        browsingService: browsingService,
        orderStore: orderStoreInstance,
        orderService: orderService,
        configurationStore: configurationStoreInstance,
        config: mapShowtimePickerConfig(config),
        events: events,
        displayText: mapShowtimePickerDisplayText(displayText),
        assets: mapShowtimePickerAssets(assets)
    };
    var instance = createComponent(selector, ShowtimePicker, props);
    return __assign({}, instance, { reloadData: function () { return instance._component.reloadData(); } });
};
addWidgetBootstrap('showtimePicker', showtimePicker);
//# sourceMappingURL=bootstrap.js.map