var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { browsingStoreInstance } from '../../../../api/src/stores/browsing/browsing-store';
import { configurationStoreInstance } from '../../../../api/src/stores/configuration/configuration-store';
import { exampleBrowsingStoreData } from '../../../../example-data/browsing/browsing-store-data';
// import '../../scss/themes/dark/site-picker.scss';
import '../../scss/themes/light/site-picker.scss';
import { SitePickerMessage, SitePickerMessageType } from './components/site-picker-message';
import { SitePickerSkeleton } from './components/site-picker-skeleton';
import { SitePicker } from './site-picker';
import { defaultSitePickerAssets } from './types/assets';
import { defaultSitePickerDisplayText } from './types/display-text';
var exampleProps = {
    browsingStore: browsingStoreInstance,
    configurationStore: configurationStoreInstance,
    displayText: defaultSitePickerDisplayText,
    assets: defaultSitePickerAssets
};
var testSitePickerMessageProps = {
    messageType: SitePickerMessageType.FailedToLoadData,
    displayText: defaultSitePickerDisplayText,
    assets: defaultSitePickerAssets
};
setTimeout(function () { return browsingStoreInstance.setData(exampleBrowsingStoreData); }, 3000);
var SitePickerExample = /** @class */ (function (_super) {
    __extends(SitePickerExample, _super);
    function SitePickerExample() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SitePickerExample.prototype.render = function () {
        return (React.createElement("div", { style: { margin: '0 auto', maxWidth: '1100px', padding: '20px 0' } },
            React.createElement("h1", null, "Site picker"),
            React.createElement(SitePicker, __assign({}, exampleProps)),
            React.createElement("br", null),
            React.createElement("h2", null, "Skeleton"),
            React.createElement(SitePickerSkeleton, null),
            React.createElement("br", null),
            React.createElement("h2", null, "Message"),
            React.createElement(SitePickerMessage, __assign({}, testSitePickerMessageProps))));
    };
    return SitePickerExample;
}(React.Component));
export { SitePickerExample };
//# sourceMappingURL=example.js.map