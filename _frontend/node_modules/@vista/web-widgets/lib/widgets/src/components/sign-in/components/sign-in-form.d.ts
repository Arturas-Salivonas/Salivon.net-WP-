import * as React from 'react';
import { SignInType } from '../../../../../types/loyalty/authentication/sign-in-provider';
import { CaptchaConfig } from '../../captcha/captcha-config';
import { SignInWidgetDisplayText } from '../types/display-text';
export interface SignInFormProps {
    signInMethod: SignInType.UsernamePassword | SignInType.EmailPassword;
    captchaConfig?: CaptchaConfig;
    signIn: (userIdentifier: string, password: string) => Promise<any>;
    displayText: SignInWidgetDisplayText;
}
export interface SignInFormState {
    userIdentifier: string;
    password: string;
    error?: string;
    isLoading: boolean;
    captchaResponse?: string;
}
export declare class SignInForm extends React.Component<SignInFormProps, SignInFormState> {
    private captchaRef;
    constructor(props: any);
    render(): JSX.Element;
    clearSignInFields: () => void;
    handleUsernameChange: (userIdentifier: string) => void;
    handlePasswordChange: (password: string) => void;
    handleCaptchaChanged: (captchaResponse?: string | undefined) => void;
    validateInputFieldsNotEmpty(): boolean;
    validateCaptcha(): boolean;
    handleSubmit: React.FormEventHandler;
    private validateSignInForm;
    private getValidationErrorMessage;
    private getSignInErrorMessage;
    private getSignInMethodLabel;
    private getSignInMethodPlaceHolder;
}
