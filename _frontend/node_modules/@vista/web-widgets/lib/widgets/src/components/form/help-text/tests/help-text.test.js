var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { compareToSnapshot } from '../../../../tests/compare-to-snapshot';
import { FormElementStyle } from '../../form-element-style';
import { HelpText } from '../help-text';
describe('HelpText', function () {
    it('it should render the default HelpText component correctly', function () {
        var props = {
            id: 'help-text-id'
        };
        compareToSnapshot(React.createElement(HelpText, __assign({}, props), "This is some help text"));
    });
    it('it should render the warning HelpText component correctly', function () {
        var props = {
            id: 'help-text-id-warning',
            style: FormElementStyle.Warning
        };
        compareToSnapshot(React.createElement(HelpText, __assign({}, props), "This is some warning help text"));
    });
    it('it should render the error HelpText component correctly', function () {
        var props = {
            id: 'help-text-id-error',
            style: FormElementStyle.Error
        };
        compareToSnapshot(React.createElement(HelpText, __assign({}, props), "This is some error help text"));
    });
    it('it should render the success HelpText component correctly', function () {
        var props = {
            id: 'help-text-id-success',
            style: FormElementStyle.Success
        };
        compareToSnapshot(React.createElement(HelpText, __assign({}, props), "This is some success help text"));
    });
});
//# sourceMappingURL=help-text.test.js.map