import * as React from 'react';
import { BrowsingService } from '../../../../api/src/services/browsing/browsing-service';
import { OrderService } from '../../../../api/src/services/order/order-service';
import { BrowsingStore } from '../../../../api/src/stores/browsing/browsing-store';
import { ConfigurationStore } from '../../../../api/src/stores/configuration/configuration-store';
import { OrderStore } from '../../../../api/src/stores/order/order-store';
import { BusinessDate } from '../../../../types/browsing/business-date';
import { ShowtimePickerMessageType } from './components/showtime-picker-message';
import { ShowtimePickerAssets } from './types/assets';
import { ShowtimePickerWidgetConfig } from './types/config';
import { ShowtimePickerDisplayText } from './types/display-text';
import { ShowtimePickerWidgetEvents } from './types/events';
export interface ShowtimePickerState {
    selectedBusinessDate?: string;
    apiErrorMessageType?: ShowtimePickerMessageType;
}
export interface ShowtimePickerProps {
    filmIds: string[];
    siteIds?: string[] | null;
    selectedBusinessDate?: BusinessDate;
    browsingStore: BrowsingStore;
    browsingService: BrowsingService;
    orderStore: OrderStore;
    orderService: OrderService;
    configurationStore: ConfigurationStore;
    config: ShowtimePickerWidgetConfig;
    events: ShowtimePickerWidgetEvents | undefined;
    displayText: ShowtimePickerDisplayText;
    assets: ShowtimePickerAssets;
}
export declare class ShowtimePicker extends React.Component<ShowtimePickerProps, ShowtimePickerState> {
    constructor(props: ShowtimePickerProps);
    render(): JSX.Element;
    componentDidMount(): void;
    /**
     * This method can be used to reload the screening dates and showtimes.
     * Call this method when the showtime picker filters (filmIds and siteIds) have been changed outside the widget.
     */
    reloadData: () => void;
    /**
     * Action performed when a showtime button is clicked.
     */
    private handleShowtimeClicked;
    /**
     * Action performed when a date is selected in the date picker
     */
    private handleDateClicked;
    /**
     * Action performed when the action button is clicked.
     */
    private handleActionButtonClicked;
    /**
     * If selectedBusinessDate is already set, or the data in the browsing store is not available, this method does nothing.
     */
    private attemptSetSelectedDateIfNotSet;
    private updateShowtimePickerErrorMessage;
}
