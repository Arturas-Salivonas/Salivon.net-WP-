import { convertArrayToMap, sortArrayByProperty } from '../array-utils';
describe('sortArrayByProperty', function () {
    it('returns an empty array when undefined is passed in', function () {
        var result = sortArrayByProperty(undefined, '');
        expect(result).toEqual([]);
    });
    it('sorts an array by a string property', function () {
        var array = [
            { value: 'a' },
            { value: 'd' },
            { value: 'c' },
            { value: 'b' }
        ];
        var result = sortArrayByProperty(array, 'value');
        expect(result).toEqual([
            { value: 'a' },
            { value: 'b' },
            { value: 'c' },
            { value: 'd' }
        ]);
    });
    it('sorts an array by a number property', function () {
        var array = [
            { value: 4 },
            { value: 1 },
            { value: 3 },
            { value: 2 }
        ];
        var result = sortArrayByProperty(array, 'value');
        expect(result).toEqual([
            { value: 1 },
            { value: 2 },
            { value: 3 },
            { value: 4 }
        ]);
    });
});
describe('convertArrayToMap', function () {
    it('returns an empty map when an empty array is passed in', function () {
        var array = [];
        var result = convertArrayToMap(array, 'value');
        expect(result).toEqual(new Map());
    });
    it('correctly converts an array to a map', function () {
        var item1 = { value: 'one' };
        var item2 = { value: 'two' };
        var item3 = { value: 'three' };
        var array = [item1, item2, item3];
        var result = convertArrayToMap(array, 'value');
        expect(result).toEqual(new Map([
            [item1.value, item1],
            [item2.value, item2],
            [item3.value, item3],
        ]));
    });
});
//# sourceMappingURL=array-utils.test.js.map