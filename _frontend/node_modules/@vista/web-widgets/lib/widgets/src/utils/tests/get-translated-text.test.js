import { configurationStoreInstance } from '../../../../api/src/stores/configuration/configuration-store';
import { getTranslatedText, getTranslatedTextOrDefault } from '../get-translated-text';
var englishTranslation = { languageTag: 'en', text: 'This is the English value' };
var frenchTranslation = { languageTag: 'fr-BE', text: 'This is the French value' };
var translations = [englishTranslation, frenchTranslation];
var testObject = {
    property: 'Default value',
    propertyTranslations: translations
};
var unknownLanguageTag = 'ru-RU';
describe('getTranslatedTextOrDefault', function () {
    it('returns the text in the current language', function () {
        configurationStoreInstance.setConfig({ localisation: { languageTag: frenchTranslation.languageTag } });
        var result = getTranslatedTextOrDefault(testObject, 'property');
        expect(result).toEqual(frenchTranslation.text);
    });
    it('returns the text in the default language if no value for the current language exists', function () {
        configurationStoreInstance.setConfig({ localisation: { languageTag: unknownLanguageTag } });
        var result = getTranslatedTextOrDefault(testObject, 'property');
        expect(result).toEqual(testObject.property);
    });
    it('returns undefined if the current language and default language do not exist', function () {
        configurationStoreInstance.setConfig({ localisation: { languageTag: unknownLanguageTag } });
        var result = getTranslatedTextOrDefault({}, 'property');
        expect(result).toEqual(undefined);
    });
    it('returns undefined if no translations exist', function () {
        var result = getTranslatedTextOrDefault({}, 'property');
        expect(result).toEqual(undefined);
    });
});
describe('getTranslatedText', function () {
    it('returns the text in the current language', function () {
        configurationStoreInstance.setConfig({ localisation: { languageTag: frenchTranslation.languageTag } });
        var result = getTranslatedText(translations);
        expect(result).toEqual(frenchTranslation.text);
    });
    it('returns undefined if the current language does not exist', function () {
        configurationStoreInstance.setConfig({ localisation: { languageTag: unknownLanguageTag } });
        var result = getTranslatedText(translations);
        expect(result).toEqual(undefined);
    });
    it('returns undefined if no translations exist', function () {
        var result = getTranslatedText([]);
        expect(result).toEqual(undefined);
    });
    it('returns undefined if translations is undefined', function () {
        var result = getTranslatedText(undefined);
        expect(result).toEqual(undefined);
    });
});
//# sourceMappingURL=get-translated-text.test.js.map