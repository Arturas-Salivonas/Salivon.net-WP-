import { convertToKebabCase } from './string-utils';
export var bemClassBuilderFactory = function (blockName) {
    return {
        block: function (modifiers) {
            return bemClassBuilder(blockName, modifiers);
        },
        element: function (elementName, modifiers) {
            return bemClassBuilder(blockName + "__" + elementName, modifiers);
        }
    };
};
var bemClassBuilder = function (baseClass, modifiers) {
    if (!modifiers)
        return baseClass;
    var modifierClasses = getModifierClasses(baseClass, modifiers);
    if (modifierClasses.length === 0)
        return baseClass;
    var modifiersString = modifierClasses.join(' ');
    return baseClass + " " + modifiersString;
};
var getModifierClasses = function (baseClass, modifiers) {
    return Object.entries(modifiers).reduce(function (acc, _a) {
        var name = _a[0], value = _a[1];
        var modifierClass = getModifierClass(baseClass, name, value);
        if (modifierClass !== null)
            acc.push(modifierClass);
        return acc;
    }, new Array());
};
var getModifierClass = function (baseClass, name, value) {
    if (!value)
        return null;
    var kebabName = convertToKebabCase(name);
    return typeof value === 'string'
        ? baseClass + "--" + kebabName + "-" + convertToKebabCase(value)
        : baseClass + "--" + kebabName;
};
//# sourceMappingURL=bem-class-builder.js.map