import { exampleJourneyOrderSeatA1 } from '../../../../example-data/journey/order-seat';
import { exampleOrderSeatA1, exampleOrderSeatA2, exampleOrderSeatA3, exampleOrderSeatB1, exampleOrderSeatB3 } from '../../../../example-data/order/order-seat';
import { getFormattedSeatLabel, getFormattedSeatsLabel } from '../seat-utils';
import { exampleJourneyOrderSeatA2, exampleJourneyOrderSeatA3, exampleJourneyOrderSeatB1, exampleJourneyOrderSeatB3 } from './../../../../example-data/journey/order-seat';
describe('getFormattedSeatLabel', function () {
    it('returns a formatted label for a given booking seat', function () {
        var result = getFormattedSeatLabel(exampleJourneyOrderSeatA1);
        expect(result).toEqual('A1');
    });
    it('returns a formatted label for a given order seat', function () {
        var result = getFormattedSeatLabel(exampleOrderSeatA1);
        expect(result).toEqual('A1');
    });
});
describe('getFormattedSeatsLabel', function () {
    it('returns undefined when an empty array is passed in', function () {
        var result = getFormattedSeatsLabel([]);
        expect(result).toEqual(undefined);
    });
    describe('JourneyOrderSeat', function () {
        it('returns a single seat label when a single seat is passed in', function () {
            var result = getFormattedSeatsLabel([exampleJourneyOrderSeatA1]);
            expect(result).toEqual('A1');
        });
        it('returns a comma separated seat label when two non-consecutive seats are passed in', function () {
            var result = getFormattedSeatsLabel([exampleJourneyOrderSeatA1, exampleJourneyOrderSeatA3]);
            expect(result).toEqual('A1, A3');
        });
        it('returns a dash separated seat label when two consecutive seats are passed in', function () {
            var result = getFormattedSeatsLabel([exampleJourneyOrderSeatA1, exampleJourneyOrderSeatA2]);
            expect(result).toEqual('A1 - A2');
        });
        it('returns a dash separated seat label when three consecutive seats are passed in', function () {
            var result = getFormattedSeatsLabel([
                exampleJourneyOrderSeatA1,
                exampleJourneyOrderSeatA2,
                exampleJourneyOrderSeatA3
            ]);
            expect(result).toEqual('A1 - A3');
        });
        it('returns a combination seat label when consecutive and non-consective seats are passed in', function () {
            var result = getFormattedSeatsLabel([
                exampleJourneyOrderSeatA1,
                exampleJourneyOrderSeatA2,
                exampleJourneyOrderSeatA3,
                exampleJourneyOrderSeatB1,
                exampleJourneyOrderSeatB3
            ]);
            expect(result).toEqual('A1 - A3, B1, B3');
        });
    });
    describe('OrderSeat', function () {
        it('returns a single seat label when a single seat is passed in', function () {
            var result = getFormattedSeatsLabel([exampleOrderSeatA1]);
            expect(result).toEqual('A1');
        });
        it('returns a comma separated seat label when two non-consecutive seats are passed in', function () {
            var result = getFormattedSeatsLabel([exampleOrderSeatA1, exampleOrderSeatA3]);
            expect(result).toEqual('A1, A3');
        });
        it('returns a dash separated seat label when two consecutive seats are passed in', function () {
            var result = getFormattedSeatsLabel([exampleOrderSeatA1, exampleOrderSeatA2]);
            expect(result).toEqual('A1 - A2');
        });
        it('returns a dash separated seat label when three consecutive seats are passed in', function () {
            var result = getFormattedSeatsLabel([exampleOrderSeatA1, exampleOrderSeatA2, exampleOrderSeatA3]);
            expect(result).toEqual('A1 - A3');
        });
        it('returns a combination seat label when consecutive and non-consective seats are passed in', function () {
            var result = getFormattedSeatsLabel([exampleOrderSeatA1, exampleOrderSeatA2, exampleOrderSeatA3, exampleOrderSeatB1, exampleOrderSeatB3]);
            expect(result).toEqual('A1 - A3, B1, B3');
        });
    });
});
//# sourceMappingURL=seat-utils.test.js.map