import { getConsecutiveSeatGroups } from './get-consecutive-seat-groups';
/**
 * Returns a formatted string label for a seat.
 */
export var getFormattedSeatLabel = function (seat) {
    return "" + seat.rowLabel + seat.seatLabel;
};
/**
 * Returns a formatted string label of an array of seats.
 */
export function getFormattedSeatsLabel(seats) {
    if (seats.length === 0)
        return undefined;
    var seatGroups = getConsecutiveSeatGroups(seats);
    var groupLabels = seatGroups.map(function (group) { return group.length === 1
        ? getFormattedSeatLabel(group[0])
        : getFormattedSeatLabel(group[0]) + " - " + getFormattedSeatLabel(group[group.length - 1]); });
    // Todo: make this format configurable
    return groupLabels.join(', ');
}
//# sourceMappingURL=seat-utils.js.map