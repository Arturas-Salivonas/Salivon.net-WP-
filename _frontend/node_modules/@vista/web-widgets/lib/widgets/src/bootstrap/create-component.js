var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import React from 'react';
import { render, unmountComponentAtNode } from 'react-dom';
export function createComponent(selector, Component, props) {
    var hostNodes = document.querySelectorAll(selector);
    if (hostNodes.length === 0) {
        throw new Error("Cannot find element with selector " + selector);
    }
    if (hostNodes.length > 1) {
        throw new Error("Multiple element found with selector " + selector + ". Can only render the component to a single element.");
    }
    var hostNode = hostNodes[0];
    var ref = React.createRef();
    render(React.createElement(Component, __assign({ ref: ref }, props)), hostNode);
    return {
        _component: ref.current,
        unmount: function () { return unmountComponentAtNode(hostNode); },
    };
}
//# sourceMappingURL=create-component.js.map