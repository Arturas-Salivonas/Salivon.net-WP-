var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { configurationStoreInstance } from '../../../api/src/stores/configuration/configuration-store';
var authorizationHeaders = {
    get 'MX-Auth-Token'() {
        return configurationStoreInstance.data.api.authToken;
    }
};
var contentTypeHeaders = {
    'Accept': 'application/json',
    'Content-Type': 'application/json',
};
/**
 * @hidden
 */
export var headers = {
    get 'defaultHeaders'() {
        return new Headers(__assign({}, authorizationHeaders, contentTypeHeaders));
    }
};
//# sourceMappingURL=headers.js.map