import { configurationStoreInstance } from '../../../../api/src/stores/configuration/configuration-store';
import { authenticateByEmailAndPassword } from './authenticate-by-email-password';
import { authenticateByExternalToken } from './authenticate-by-external-token';
import { authenticateByUsernameAndPassword } from './authenticate-by-username-password';
import { getMemberDetails } from './get-member-details';
import { getLoyaltyMemberTransactions } from './get-member-transactions';
import { signOut } from './sign-out';
// TODO: This will only evaluate once preventing changes in cinemaChainId from affecting the mxl authentication api.
var cinemaChainId = configurationStoreInstance.data.api.cinemaChainId;
var mxlAuthenticationApi = {
    authenticateByEmailAndPassword: function (email, password, returnMemberDetails) { return authenticateByEmailAndPassword(cinemaChainId, email, password, returnMemberDetails); },
    authenticateByUsernameAndPassword: function (userName, password, returnMemberDetails) { return authenticateByUsernameAndPassword(cinemaChainId, userName, password, returnMemberDetails); },
    authenticateByExternalToken: function (issuerName, token, returnMemberDetails) { return authenticateByExternalToken(cinemaChainId, issuerName, token, returnMemberDetails); },
    signOut: function () { return signOut(cinemaChainId); }
};
var mxlMemberManagementApi = {
    getMemberDetails: function (memberId) { return getMemberDetails(cinemaChainId, memberId); },
    getLoyaltyMemberTransactions: function (memberId, skip, top) { return getLoyaltyMemberTransactions(cinemaChainId, memberId, skip, top); }
};
export var mxlApi = {
    auth: mxlAuthenticationApi,
    memberManagement: mxlMemberManagementApi
};
//# sourceMappingURL=mxl-api.js.map