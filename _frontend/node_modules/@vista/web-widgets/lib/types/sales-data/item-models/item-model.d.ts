import { Translation } from '../../translation';
import { ItemModifierGroup } from './item-modifier-group';
import { ItemOption } from './item-option';
import { ItemPackageItem } from './item-package-item';
export declare enum ItemModelType {
    /**
     * A normal item
     */
    Normal = "Normal",
    /**
     * An item containing child items
     */
    Package = "Package",
    /**
     * An item that cannot be sold directly. One of its options must be chosen to be sold instead.
     */
    ParentSales = "ParentSales"
}
export interface ItemModelBase {
    /**
     * Identifier for an item (unique within a single site).
     */
    id: string;
    /**
     * The description of the item
     */
    description: string;
    /**
     * Translations for the description of the item
     */
    descriptionTranslations: Translation[];
    /**
     * The extended description of the item
     */
    extendedDescription?: string;
    /**
     * Translations for the extended description of the item
     */
    extendedDescriptionTranslations: Translation[];
    /**
     * The short description of the item
     */
    shortDescription?: string;
}
export interface PricedItemModel extends ItemModelBase {
    /**
     * The price in dollars of an item
     */
    price: number;
}
export interface ModifierItem extends PricedItemModel {
}
export interface NormalItemModel extends PricedItemModel {
    type: ItemModelType.Normal;
    /**
     * The groups of modifiers available for this item.
     */
    modifierGroups: ItemModifierGroup[];
}
export interface ParentSalesItemModel extends ItemModelBase {
    type: ItemModelType.ParentSales;
    /**
     * The options available for this parent sales item.
     */
    options: ItemOption[];
}
export interface ItemPackageModel extends PricedItemModel {
    type: ItemModelType.Package;
    /**
     * The child items within this item package.
     */
    packageItems: ItemPackageItem[];
}
/**
 * A sellable item (aka concession).
 */
export declare type ItemModel = NormalItemModel | ParentSalesItemModel | ItemPackageModel;
