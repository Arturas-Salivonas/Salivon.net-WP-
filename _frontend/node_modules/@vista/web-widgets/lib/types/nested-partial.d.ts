import { TextFormatType } from '../api/src/utils/form-validation/validation-config/field-validation-configs';
import { ValidationRule } from '../api/src/utils/form-validation/validation-rules/validation-rule';
import { HeroAttributeColors } from '../widgets/src/components/showtime-picker/types/config';
export declare type ExcludedNestedPartialTypes = TextFormatType | RegExp | ValidationRule<any> | undefined | HeroAttributeColors;
/**
 * Recursively makes all properties in T optional
 */
export declare type NestedPartial<T, ExcludedTypes = ExcludedNestedPartialTypes> = {
    [P in keyof T]?: T[P] extends ExcludedTypes ? T[P] : NestedPartial<T[P], ExcludedTypes>;
};
