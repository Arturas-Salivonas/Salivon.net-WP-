import { orderStoreInstance } from '../../../stores/order/order-store';
import { configurationStoreInstance } from './../../../stores/configuration/configuration-store';
export var TicketingFlowScenario;
(function (TicketingFlowScenario) {
    TicketingFlowScenario[TicketingFlowScenario["SeatFirstCreateOrder"] = 0] = "SeatFirstCreateOrder";
    TicketingFlowScenario[TicketingFlowScenario["SeatFirstUpdateSeats"] = 1] = "SeatFirstUpdateSeats";
    TicketingFlowScenario[TicketingFlowScenario["TicketFirstUpdateSeats"] = 2] = "TicketFirstUpdateSeats";
    TicketingFlowScenario[TicketingFlowScenario["Unsupported"] = 3] = "Unsupported";
})(TicketingFlowScenario || (TicketingFlowScenario = {}));
export function getTicketingFlowScenario() {
    var hasOrderId = orderStoreInstance.selectors.hasOrderId();
    var isSeatFirstOrdering = configurationStoreInstance.data.ticketing.isSeatFirstOrdering;
    if (hasOrderId && isSeatFirstOrdering)
        return TicketingFlowScenario.SeatFirstUpdateSeats;
    if (hasOrderId && !isSeatFirstOrdering)
        return TicketingFlowScenario.TicketFirstUpdateSeats;
    if (!hasOrderId && isSeatFirstOrdering)
        return TicketingFlowScenario.SeatFirstCreateOrder;
    return TicketingFlowScenario.Unsupported;
}
//# sourceMappingURL=get-ticketing-flow-scenario.js.map