import { BusinessDate } from '../../../../types/browsing/business-date';
import { Film } from '../../../../types/browsing/film';
import { ScreeningDate } from '../../../../types/browsing/screening-date';
import { Showtime } from '../../../../types/browsing/showtime';
import { ShowtimeQuery } from '../../../../types/browsing/showtime-query';
import { Site } from '../../../../types/browsing/site';
/**
 * Service to get details about films, sites and showtimes.
 */
export interface BrowsingService {
    loadFilms: () => Promise<Film[]>;
    loadFilmsForSite: (siteId: string) => Promise<Film[]>;
    loadFilmById: (filmId: string) => Promise<Film>;
    loadSites: () => Promise<Site[]>;
    loadSiteById: (siteId: string) => Promise<Site>;
    loadShowtimeById: (showtimeId: string) => Promise<Showtime>;
    loadShowtimesForFirstBusinessDate: (query: ShowtimeQuery) => Promise<Showtime[]>;
    loadShowtimesForBusinessDate: (businessDate: BusinessDate, query: ShowtimeQuery) => Promise<Showtime[]>;
    loadScreeningDates: (query: ShowtimeQuery) => Promise<ScreeningDate[]>;
}
/**
 * Default instance of the browsing service
 */
export declare const browsingService: BrowsingService;
