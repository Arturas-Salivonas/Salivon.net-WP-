import { CacheService } from '../cache-service';
// test data
var valString = {
    key: 'string',
    value: 'one simple string'
};
var valNumber = {
    key: 'number',
    value: 123
};
var valArray = {
    key: 'array',
    value: ['a', 'b', 'c']
};
var valObject = {
    key: 'object',
    value: { one: 1, two: 'second value' }
};
var valDate = {
    key: 'object',
    value: new Date(2000, 1, 1)
};
var valDateNested = {
    key: 'object',
    value: {
        date: new Date(2000, 1, 1),
        nested: {
            dates: [new Date(2000, 1, 2)],
            datesNested: [{ date: new Date(2000, 1, 3) }]
        }
    }
};
/**
 * Cache Service class test
 */
describe('Cache Service', function () {
    var cacheService = new CacheService();
    [valString, valNumber, valArray, valObject, valDate, valDateNested]
        .map(function (data) {
        describe('Testing different type of data', function () {
            it(data.key + ": testing set() and get()", function () {
                cacheService.set(data.key, data.value);
                expect(cacheService.get(data.key)).toEqual(data.value);
            });
            it(data.key + ": testing remove()", function () {
                cacheService.set(data.key, data.value);
                expect(cacheService.get(data.key)).toEqual(data.value);
                cacheService.remove(data.key);
                expect(cacheService.get(data.key)).toEqual(null);
            });
            it('testing expiry time', function () {
                cacheService.set(data.key, data.value, 50);
                expect(cacheService.get(data.key)).toEqual(data.value);
                setTimeout(function () {
                    expect(cacheService.get(data.key)).toEqual(null);
                }, 60);
            });
        });
    });
    it('Testing flush()', function () {
        sessionStorage.setItem('outside-cache', 'not part of cache');
        cacheService.set(valString.key, valString.value);
        expect(cacheService.get(valString.key)).toEqual(valString.value);
        expect(sessionStorage.getItem('outside-cache')).toEqual('not part of cache');
        cacheService.flush();
        expect(cacheService.get(valString.key)).toEqual(null);
        expect(sessionStorage.getItem('outside-cache')).toEqual('not part of cache');
    });
    it('Testing buckets behavior', function () {
        cacheService.set(valString.key, valString.value);
        cacheService.setBucket('Foo');
        cacheService.set(valNumber.key, valNumber.value);
        expect(cacheService.get(valString.key)).toEqual(null);
        expect(cacheService.get(valNumber.key)).toEqual(valNumber.value);
        cacheService.flush();
        expect(cacheService.get(valNumber.key)).toEqual(null);
        cacheService.resetBucket();
        expect(cacheService.get(valString.key)).toEqual(valString.value);
    });
});
//# sourceMappingURL=cache-service.test.js.map