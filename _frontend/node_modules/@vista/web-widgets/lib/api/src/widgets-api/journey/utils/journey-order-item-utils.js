/**
 * Groups a given set of journey order items by their itemId and price.
 */
export function groupJourneyOrderItemsByIdAndPrice(items) {
    var itemMap = items.reduce(function (map, item) {
        var key = item.itemId + "." + item.price;
        var existingItem = map.get(key);
        if (existingItem) {
            existingItem.quantity++;
            existingItem.totalPrice += item.price;
        }
        else {
            map.set(key, {
                itemId: item.itemId,
                firstOrderLineNumber: item.orderLineNumber,
                quantity: 1,
                totalPrice: item.price
            });
        }
        return map;
    }, new Map());
    return Array.from(itemMap, function (_a) {
        var _ = _a[0], groupedItem = _a[1];
        return groupedItem;
    });
}
//# sourceMappingURL=journey-order-item-utils.js.map