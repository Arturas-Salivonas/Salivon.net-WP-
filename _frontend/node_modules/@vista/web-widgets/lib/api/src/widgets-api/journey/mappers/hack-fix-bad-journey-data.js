var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { addMinutes } from 'date-fns';
/**
 * Todo: Remove this horrible hack
 * Temporary workaround to fix bad data returned by the journey service.
 */
export var tryFixBadJourneyDataOrReturnAsIs = function (details) {
    try {
        return fixBadJourneyData(details);
    }
    catch (error) {
        return details;
    }
};
var fixBadJourneyData = function (detail) {
    var detailsCopy = __assign({}, detail);
    var journey = detailsCopy.journey, relatedData = detailsCopy.relatedData;
    var _a = relatedData, showtimes = _a.showtimes, items = _a.items;
    if (showtimes) {
        for (var _i = 0, showtimes_1 = showtimes; _i < showtimes_1.length; _i++) {
            var showtime = showtimes_1[_i];
            var endTime = addMinutes(new Date(showtime.startTime.utc), 200);
            showtime.endTime.utc = endTime.toISOString();
        }
    }
    if (items) {
        for (var _b = 0, items_1 = items; _b < items_1.length; _b++) {
            var item = items_1[_b];
            var actualDescription = item.extendedDescription || item.description;
            item.description = actualDescription;
        }
        journey.orders = journey.orders.map(function (o) { return fixJourneyOrder(o, items); });
    }
    return detailsCopy;
};
function fixJourneyOrder(order, items) {
    var feeItemTotalCost = 0;
    var filteredItems = order.items.reduce(function (acc, item) {
        var itemModel = items.find(function (i) { return i.id === item.itemId; });
        if (!itemModel)
            return acc;
        var isFeeItem = /fee/i.test(itemModel.description.text);
        if (isFeeItem) {
            feeItemTotalCost += item.price;
        }
        else {
            acc.push(item);
        }
        return acc;
    }, new Array());
    return __assign({}, order, { items: filteredItems, booking: {
            bookingId: undefined,
            originalBookingFee: feeItemTotalCost,
            totalBookingFee: feeItemTotalCost
        } });
}
//# sourceMappingURL=hack-fix-bad-journey-data.js.map