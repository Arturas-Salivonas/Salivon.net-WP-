import { SeatAvailability } from '../../../../../../../types/seating/seat-availability';
import { createSingleRowSeatLayout } from '../../test/test-utils';
import { SeatLayoutStateManager } from '../../utils/seat-layout-state-manager';
import { mustSelectAssociatedWheelchairSeatRule } from '../must-select-associated-wheelchair-seat-rule';
var isSeatFirstOrdering = false;
var maximumTicketsAllowedInAnOrder = 10;
var defaultRule = mustSelectAssociatedWheelchairSeatRule();
describe('mustSelectAssociatedWheelchairSeatRule', function () {
    it('allows a companion seat to be selected when its associated wheelchair seat is also selected', function () {
        var seatLayout = createSingleRowSeatLayout(function (row) {
            return row.addWheelchair({
                wheelchairSeat: { availability: SeatAvailability.Selected },
                companionSeats: [
                    { availability: SeatAvailability.Selected }
                ]
            });
        });
        var result = defaultRule.validate(new SeatLayoutStateManager(seatLayout, isSeatFirstOrdering, maximumTicketsAllowedInAnOrder));
        expect(result.valid).toEqual(true);
    });
    it('allows multiple companion seats to be selected when the associated wheelchair seat is also selected', function () {
        var seatLayout = createSingleRowSeatLayout(function (row) {
            return row.addWheelchair({
                wheelchairSeat: { availability: SeatAvailability.Selected },
                companionSeats: [
                    { availability: SeatAvailability.Selected },
                    { availability: SeatAvailability.Selected },
                    { availability: SeatAvailability.Selected }
                ]
            });
        });
        var result = defaultRule.validate(new SeatLayoutStateManager(seatLayout, isSeatFirstOrdering, maximumTicketsAllowedInAnOrder));
        expect(result.valid).toEqual(true);
    });
    it('allows a wheelchair seat to be selected without the companion seat selected', function () {
        var seatLayout = createSingleRowSeatLayout(function (row) {
            return row.addWheelchair({
                wheelchairSeat: { availability: SeatAvailability.Selected },
                companionSeats: [
                    { availability: SeatAvailability.Available }
                ]
            });
        });
        var result = defaultRule.validate(new SeatLayoutStateManager(seatLayout, isSeatFirstOrdering, maximumTicketsAllowedInAnOrder));
        expect(result.valid).toEqual(true);
    });
    it('prevents a companion seat being selected without the wheelchair seat selected', function () {
        var seatLayout = createSingleRowSeatLayout(function (row) {
            return row.addWheelchair({
                wheelchairSeat: { availability: SeatAvailability.Available },
                companionSeats: [
                    { availability: SeatAvailability.Selected }
                ]
            });
        });
        var result = defaultRule.validate(new SeatLayoutStateManager(seatLayout, isSeatFirstOrdering, maximumTicketsAllowedInAnOrder));
        expect(result.valid).toEqual(false);
    });
});
//# sourceMappingURL=must-select-associated-wheelchair-seat-rule.test.js.map