import { SeatAvailability } from '../../../../../../../types/seating/seat-availability';
import { SeatLayoutBuilder } from '../../test/seat-layout-builder';
import { selectSeat } from '../../test/test-utils';
import { SeatLayoutStateManager } from '../../utils/seat-layout-state-manager';
import { cannotExceedAllocatedSeatsForAreaCategoryRule } from '../cannot-exceed-allocated-seats-for-area-category-rule';
var isSeatFirstOrdering = false;
var maximumTicketsAllowedInAnOrder = 10;
var defaultRule = cannotExceedAllocatedSeatsForAreaCategoryRule();
describe('cannotExceedAllocatedSeatsForAreaCategoryRule', function () {
    it('cannot select a seat from an area category with no seats available to allocate', function () {
        var seatLayout = new SeatLayoutBuilder()
            .addAreaCategory(function (areaCat) {
            areaCat.addArea(function (area) { return area
                .addRow('A', function (row) {
                row
                    .addSeat({ availability: SeatAvailability.Selected, seatLabel: '1' })
                    .addSeat({ availability: SeatAvailability.Available, seatLabel: '2' });
            }); });
        })
            .create();
        var seatLayoutStateManager = new SeatLayoutStateManager(seatLayout, isSeatFirstOrdering, maximumTicketsAllowedInAnOrder);
        selectSeat('A', '2', seatLayoutStateManager);
        var result = defaultRule.validate(new SeatLayoutStateManager(seatLayout, isSeatFirstOrdering, maximumTicketsAllowedInAnOrder));
        expect(result.valid).toEqual(false);
    });
    it('can select an area that has seats available to allocate', function () {
        var seatLayout = new SeatLayoutBuilder()
            .addAreaCategory(function (areaCat) {
            areaCat.addArea(function (area) { return area
                .addRow('A', function (row) {
                row
                    .addSeat({ availability: SeatAvailability.Selected, seatLabel: '1' })
                    .addSeat({ availability: SeatAvailability.Available, seatLabel: '2' });
            }); });
            areaCat.setTotalSeatsToSelect(2);
        })
            .create();
        var seatLayoutStateManager = new SeatLayoutStateManager(seatLayout, isSeatFirstOrdering, maximumTicketsAllowedInAnOrder);
        selectSeat('A', '2', seatLayoutStateManager);
        var result = defaultRule.validate(new SeatLayoutStateManager(seatLayout, isSeatFirstOrdering, maximumTicketsAllowedInAnOrder));
        expect(result.valid).toEqual(true);
    });
});
//# sourceMappingURL=cannot-exceed-allocated-seats-for-area-category-rule.test.js.map