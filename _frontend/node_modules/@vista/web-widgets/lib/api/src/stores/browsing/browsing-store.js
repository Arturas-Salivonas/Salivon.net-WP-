var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { BaseStore } from '../base-store';
import { defaultBrowsingStoreData } from './../../../../types/stores/browsing-store-data';
import { browserSessionServiceInstance } from './../../user/browser-session-service';
import { cacheServiceInstance } from './../../user/cache-service';
import { browsingStoreActions } from './actions/actions';
import { browsingStoreSelectors } from './selectors/selectors';
/**
 * Class for creating objects that store browsing information.
 */
var BrowsingStore = /** @class */ (function (_super) {
    __extends(BrowsingStore, _super);
    function BrowsingStore() {
        return _super.call(this, 'browsing-store', browserSessionServiceInstance, cacheServiceInstance, defaultBrowsingStoreData) || this;
    }
    Object.defineProperty(BrowsingStore.prototype, "selectors", {
        /**
         * Selector methods for the Browsing Store.
         */
        get: function () {
            return browsingStoreSelectors;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BrowsingStore.prototype, "actions", {
        /**
         * Actions for the Browsing Store.
         */
        get: function () {
            return browsingStoreActions;
        },
        enumerable: true,
        configurable: true
    });
    return BrowsingStore;
}(BaseStore));
export { BrowsingStore };
// create store instance with default values
export var browsingStoreInstance = new BrowsingStore();
//# sourceMappingURL=browsing-store.js.map