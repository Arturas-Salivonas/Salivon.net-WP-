var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { toJS } from 'mobx';
import { examplePackageTicketType, exampleStandardTicketType1 } from '../../../../../../example-data/order/order-ticket-type';
import { exampleOrderShowtime } from './../../../../../../example-data/order/order-showtime';
import { exampleLoyaltyTicket1, examplePackageTicket, exampleStandardTicket1 } from './../../../../../../example-data/order/order-ticket';
import { orderStoreInstance } from './../../order-store';
import { setTicketTypesForShowtime } from './../set-ticket-types-for-showtime';
describe('setTicketTypesForShowtime', function () {
    afterEach(function () {
        orderStoreInstance.flush();
        jest.resetAllMocks();
    });
    it('throws an error if the showtime does not exist in the order', function () {
        expect(function () { return setTicketTypesForShowtime('123', []); }).toThrow();
    });
    it('sets the ticket types correctly', function () {
        var _a;
        orderStoreInstance.syncToCache = jest.fn();
        orderStoreInstance.data.order.showtimes = [exampleOrderShowtime];
        var ticketTypes = [exampleStandardTicketType1, examplePackageTicketType];
        setTicketTypesForShowtime(exampleOrderShowtime.showtimeId, ticketTypes);
        expect(toJS(orderStoreInstance.data.order.showtimes[0].ticketTypes)).toEqual((_a = {},
            _a[exampleStandardTicketType1.key] = exampleStandardTicketType1,
            _a[examplePackageTicketType.key] = examplePackageTicketType,
            _a));
        expect(orderStoreInstance.syncToCache).toBeCalled();
    });
    it('filters the selected tickets correctly', function () {
        var ticketTypes = [exampleStandardTicketType1, examplePackageTicketType];
        var showtime = __assign({}, exampleOrderShowtime, { tickets: [exampleStandardTicket1, examplePackageTicket, exampleLoyaltyTicket1] });
        orderStoreInstance.data.order.showtimes = [showtime];
        setTicketTypesForShowtime(showtime.showtimeId, ticketTypes);
        expect(toJS(orderStoreInstance.data.order.showtimes[0].tickets)).toEqual([
            exampleStandardTicket1, examplePackageTicket
        ]);
    });
});
//# sourceMappingURL=set-ticket-types-for-showtime.test.js.map