import { Film } from '../../../../../types/browsing/film';
import { Genre } from '../../../../../types/browsing/genre';
import { Showtime } from '../../../../../types/browsing/showtime';
import { ShowtimeQuery } from '../../../../../types/browsing/showtime-query';
import { Site } from '../../../../../types/browsing/site';
import { ScreeningDatesData } from '../../../../../types/stores/browsing-store/screening-dates-for-query';
import { ShowtimesData } from '../../../../../types/stores/browsing-store/showtimes-for-query';
import { BusinessDate } from './../../../../../types/browsing/business-date';
import { CensorRating } from './../../../../../types/browsing/censor-rating';
import { Person } from './../../../../../types/browsing/person';
import { ShowtimeAttribute } from './../../../../../types/browsing/showtime-attribute';
/**
 * Actions for the Browsing Store.
 */
export interface BrowsingStoreActions {
    setShowtimesForQueryOnBusinessDate: (showtimesData: ShowtimesData, showtimesQuery: ShowtimeQuery, businessDate: BusinessDate) => void;
    addShowtimes: (showtimes: Showtime[]) => void;
    addFilms: (films: Film[]) => void;
    setFilmsForSite: (siteId: string, films: Film[]) => void;
    setFilms: (films: Film[]) => void;
    addSites: (site: Site[]) => void;
    setSites: (sites: Site[]) => void;
    addSelectedSite: (siteId: string) => void;
    removeSelectedSite: (siteId: string) => void;
    addPeople: (people: Person[]) => void;
    addGenres: (genres: Genre[]) => void;
    addCensorRatings: (censorRatings: CensorRating[]) => void;
    addShowtimeAttributes: (showtimeAttributes: ShowtimeAttribute[]) => void;
    setScreeningDatesForQuery: (screeningDatesData: ScreeningDatesData, showtimesQuery: ShowtimeQuery) => void;
}
export declare const browsingStoreActions: BrowsingStoreActions;
