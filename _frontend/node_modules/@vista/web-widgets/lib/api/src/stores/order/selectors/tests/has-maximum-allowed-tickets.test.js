var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { exampleStandardTicket1 } from './../../../../../../example-data/order/order-ticket';
import { orderStoreInstance } from '../../order-store';
import { exampleOrder } from '../../../../../../example-data/order/order';
import { exampleOrderShowtime } from '../../../../../../example-data/order/order-showtime';
import { configurationStoreInstance } from '../../../configuration/configuration-store';
describe('has-maximum-allowed-tickets', function () {
    beforeEach(function () {
        orderStoreInstance.flush();
    });
    it('returns "true" when the order contains the max number of tickets as defined by the configuration store', function () {
        var order = createOrder(configurationStoreInstance.data.ticketing.maximumAllowedTicketsInAnOrder);
        orderStoreInstance.actions.setOrderData(order);
        expect(orderStoreInstance.selectors.hasMaximumAllowedTickets()).toEqual(true);
    });
    it('returns "false" when the order has less tickets than what is defined in the configuration store', function () {
        var order = createOrder(configurationStoreInstance.data.ticketing.maximumAllowedTicketsInAnOrder - 1);
        orderStoreInstance.actions.setOrderData(order);
        expect(orderStoreInstance.selectors.hasMaximumAllowedTickets()).toEqual(false);
    });
});
var createOrder = function (ticketQuantity) {
    var exampleTicket = __assign({}, exampleStandardTicket1, { quantity: ticketQuantity });
    var exampleShowtime = __assign({}, exampleOrderShowtime, { tickets: [exampleTicket] });
    var order = __assign({}, exampleOrder, { showtimes: [exampleShowtime] });
    return order;
};
//# sourceMappingURL=has-maximum-allowed-tickets.test.js.map