import { toJS } from 'mobx';
import { exampleSites } from '../../../../../../example-data/browsing/site';
import { browsingStoreInstance } from './../../browsing-store';
import { getUnselectedSites } from './../get-unselected-sites';
describe('getUnselectedSites', function () {
    afterEach(function () {
        browsingStoreInstance.flush();
    });
    it('returns an empty array if all sites have been selected', function () {
        browsingStoreInstance.actions.setSites(exampleSites);
        browsingStoreInstance.setData({ selectedSiteIds: exampleSites.map(function (s) { return s.id; }) });
        var result = getUnselectedSites();
        expect(toJS(result)).toEqual([]);
    });
    it('returns the unselected sites from the browsing store', function () {
        browsingStoreInstance.actions.setSites([exampleSites[0], exampleSites[1]]);
        browsingStoreInstance.setData({ selectedSiteIds: [exampleSites[0].id] });
        var result = getUnselectedSites();
        expect(JSON.parse(JSON.stringify(result))).toEqual([exampleSites[1]]);
    });
});
//# sourceMappingURL=get-unselected-sites.test.js.map