var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { exampleOrderShowtime } from '../../../../../../example-data/order/order-showtime';
import { exampleLoyaltyTicket1, exampleStandardTicket1 } from '../../../../../../example-data/order/order-ticket';
import { exampleLoyaltyTicketType1, exampleStandardTicketType1 } from '../../../../../../example-data/order/order-ticket-type';
import { orderStoreInstance } from '../../order-store';
import { hasAnyLoyaltyTickets } from '../has-any-loyalty-tickets';
describe('hasAnyLoyaltyTickets', function () {
    beforeEach(function () {
        orderStoreInstance.flush();
    });
    it('returns false when the order has no showtimes', function () {
        orderStoreInstance.data.order.showtimes = [];
        var result = hasAnyLoyaltyTickets();
        expect(result).toEqual(false);
    });
    it('returns false when the order showtimes do not have any tickets', function () {
        var showtime = __assign({}, exampleOrderShowtime, { tickets: [] });
        orderStoreInstance.data.order.showtimes = [showtime];
        var result = hasAnyLoyaltyTickets();
        expect(result).toEqual(false);
    });
    it('returns false when the order showtimes do not have any Loyalty tickets', function () {
        var ticket = __assign({}, exampleStandardTicket1, { quantity: 1 });
        var showtime = __assign({}, exampleOrderShowtime, { tickets: [ticket], ticketTypes: new Map([[exampleStandardTicketType1.key, exampleStandardTicketType1]]) });
        orderStoreInstance.data.order.showtimes = [showtime];
        var result = hasAnyLoyaltyTickets();
        expect(result).toEqual(false);
    });
    it('returns true when the order showtimes have Loyalty tickets', function () {
        var ticket = __assign({}, exampleLoyaltyTicket1, { quantity: 1 });
        var showtime = __assign({}, exampleOrderShowtime, { tickets: [ticket], ticketTypes: new Map([[exampleLoyaltyTicketType1.key, exampleLoyaltyTicketType1]]) });
        orderStoreInstance.data.order.showtimes = [showtime];
        var result = hasAnyLoyaltyTickets();
        expect(result).toEqual(true);
    });
});
//# sourceMappingURL=has-any-loyalty-tickets.test.js.map