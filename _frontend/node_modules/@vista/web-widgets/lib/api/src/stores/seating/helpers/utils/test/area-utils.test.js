import { SeatLayoutBuilder } from '../../test/seat-layout-builder';
import { cloneAreaCategory, getAreaByNumber } from '../area-utils';
var testLayout = new SeatLayoutBuilder().addAreaCategory(function (areaCat) {
    return areaCat.addArea(function (area) {
        area.addRow('A', function (row) { row.addSeat({}); });
    });
}).create();
describe('getAreaByNumber', function () {
    it('returns an area by it\'s area number', function () {
        var area = testLayout.areas[0];
        var result = getAreaByNumber(area.number, testLayout);
        expect(result).toEqual(area);
    });
    it('returns undefined for an area number that does not exist', function () {
        var result = getAreaByNumber(-1, testLayout);
        expect(result).toEqual(undefined);
    });
});
describe('cloneAreaCategory', function () {
    it('creates a clone of a given area category', function () {
        var areaCategory = {
            areaCategoryCode: '1',
            seatsToAllocate: 2,
            seatsAllocatedCount: 1,
            seatsNotAllocatedCount: 1,
            selectedSeats: [
                {
                    areaNumber: 1,
                    rowIndex: 1,
                    columnIndex: 1
                }
            ]
        };
        var clone = cloneAreaCategory(areaCategory);
        expect(clone).not.toBe(areaCategory);
        expect(clone).toEqual(areaCategory);
    });
});
//# sourceMappingURL=area-utils.test.js.map