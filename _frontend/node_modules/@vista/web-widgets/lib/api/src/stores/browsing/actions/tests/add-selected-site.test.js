import { toJS } from 'mobx';
import { addSelectedSite } from '../add-selected-site';
import { browsingStoreInstance } from './../../browsing-store';
describe('addSelectedSite', function () {
    afterEach(function () {
        browsingStoreInstance.flush();
    });
    it('can add a selected site to the browsing store', function () {
        addSelectedSite('1');
        expect(toJS(browsingStoreInstance.data.selectedSiteIds)).toEqual(['1']);
    });
    it('will not re-add an already selected site to the browsing store', function () {
        addSelectedSite('1');
        addSelectedSite('1');
        expect(toJS(browsingStoreInstance.data.selectedSiteIds)).toEqual(['1']);
    });
    it('throws an error if the maximum number of selected sites has already been reached', function () {
        jest.spyOn(browsingStoreInstance.selectors, 'hasMaximumSelectedSites').mockReturnValue(true);
        expect(function () { return addSelectedSite('1'); })
            .toThrowError('Maximum number of selected sites reached. Cannot add site with ID 1');
    });
});
//# sourceMappingURL=add-selected-site.test.js.map