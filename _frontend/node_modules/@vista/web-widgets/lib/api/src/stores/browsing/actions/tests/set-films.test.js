var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { toJS } from 'mobx';
import { exampleFilm } from '../../../../../../example-data/browsing/film';
import { browsingStoreInstance } from '../../browsing-store';
import { setFilms } from '../set-films';
describe('setFilms', function () {
    var exampleFilmOne = exampleFilm;
    var exampleFilmTwo = __assign({}, exampleFilm);
    exampleFilmTwo.id += '2';
    var exampleFilmThree = __assign({}, exampleFilm);
    exampleFilmThree.id += '3';
    afterEach(function () {
        browsingStoreInstance.flush();
    });
    it('can add films to the films store', function () {
        var _a;
        setFilms([exampleFilm, exampleFilmTwo]);
        expect(toJS(browsingStoreInstance.data.filmsById)).toEqual((_a = {}, _a[exampleFilmOne.id] = exampleFilmOne, _a[exampleFilmTwo.id] = exampleFilmTwo, _a));
    });
    it('replaces all films in the films store', function () {
        var _a;
        browsingStoreInstance.data.filmsById.set(exampleFilmTwo.id, exampleFilmTwo);
        setFilms([exampleFilmOne, exampleFilmThree]);
        expect(toJS(browsingStoreInstance.data.filmsById)).toEqual((_a = {}, _a[exampleFilmOne.id] = exampleFilmOne, _a[exampleFilmThree.id] = exampleFilmThree, _a));
    });
});
//# sourceMappingURL=set-films.test.js.map