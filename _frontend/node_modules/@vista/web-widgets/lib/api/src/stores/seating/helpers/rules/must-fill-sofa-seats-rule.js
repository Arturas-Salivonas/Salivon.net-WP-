import { hasAvailableSeatsInGroup } from '../utils/seat-layout-state-utils';
import { isSofaSeat } from '../utils/seat-utils';
import { SeatSelectionRuleName } from './seat-selection-rule';
/**
 * Rule that prevents a sofa seat from being sold unless all available
 * seats in the sofa are selected.
 */
export var mustFillSofaSeatsRule = function () { return ({
    name: SeatSelectionRuleName.MustFillSofaSeats,
    preventSeatSelection: false,
    validate: function (seatLayoutStateManager) {
        var selectedSeats = seatLayoutStateManager.getSelectedSeats();
        var hasPartiallyFilledSofas = selectedSeats
            .filter(function (seat) { return isSofaSeat(seat); })
            .map(function (seat) { return hasAvailableSeatsInGroup(seat, seatLayoutStateManager); })
            .some(function (hasAvailableSeatsInSofa) { return hasAvailableSeatsInSofa; });
        return {
            ruleName: this.name,
            valid: !hasPartiallyFilledSofas
        };
    }
}); };
//# sourceMappingURL=must-fill-sofa-seats-rule.js.map