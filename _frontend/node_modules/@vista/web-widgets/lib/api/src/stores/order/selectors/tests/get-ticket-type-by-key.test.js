var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { toJS } from 'mobx';
import { getTicketTypeByKey } from '../get-ticket-type-by-key';
import { exampleOrderShowtime } from './../../../../../../example-data/order/order-showtime';
import { exampleStandardTicketType1 } from './../../../../../../example-data/order/order-ticket-type';
import { orderStoreInstance } from './../../order-store';
describe('getTicketTypeByKey', function () {
    beforeEach(function () {
        orderStoreInstance.flush();
    });
    it('throws an error if the showtime does not exist in the order', function () {
        expect(function () { return getTicketTypeByKey('123', '456'); }).toThrow();
    });
    it('throws an error if the showtime ticketTypes are undefined', function () {
        var showtime = __assign({}, exampleOrderShowtime, { ticketTypes: undefined });
        orderStoreInstance.data.order.showtimes = [showtime];
        expect(function () { return getTicketTypeByKey(showtime.showtimeId, '456'); }).toThrow();
    });
    it('throws an error if the showtime does not have the given ticketTypeKey', function () {
        var showtime = __assign({}, exampleOrderShowtime, { ticketTypes: new Map() });
        orderStoreInstance.data.order.showtimes = [showtime];
        expect(function () { return getTicketTypeByKey(showtime.showtimeId, '456'); }).toThrow();
    });
    it('returns the ticket type', function () {
        var ticketTypes = new Map([
            [exampleStandardTicketType1.key, exampleStandardTicketType1]
        ]);
        var showtime = __assign({}, exampleOrderShowtime, { ticketTypes: ticketTypes });
        orderStoreInstance.data.order.showtimes = [showtime];
        var result = getTicketTypeByKey(showtime.showtimeId, exampleStandardTicketType1.key);
        expect(toJS(result)).toEqual(exampleStandardTicketType1);
    });
});
//# sourceMappingURL=get-ticket-type-by-key.test.js.map