var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { toJS } from 'mobx';
/**
 * Finds and returns an area within a seat layout by its area number.
 */
export var getAreaByNumber = function (areaNumber, seatLayout) {
    return seatLayout.areas.find(function (x) { return x.number === areaNumber; });
};
/**
 * Makes a deep copy of a given area category.
 */
export var cloneAreaCategory = function (areaCategory) {
    return __assign({}, toJS(areaCategory), { selectedSeats: toJS(areaCategory.selectedSeats).slice() });
};
//# sourceMappingURL=area-utils.js.map