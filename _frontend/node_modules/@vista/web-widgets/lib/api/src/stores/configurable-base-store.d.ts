import { BrowserSessionService } from '../user/browser-session-service';
import { CacheService } from '../user/cache-service';
import { BaseStore } from './base-store';
/**
 * Provides other classes the ability to set options that are available in a given interface.
 * @extends BaseStore
 */
export declare class ConfigurableBaseStore<T, TOptions> extends BaseStore<T> {
    options: TOptions;
    constructor(key: string, browserSessionService: BrowserSessionService, cacheService: CacheService, defaults?: T, optionsDefaults?: TOptions);
    /**
     * Assigns the provided value to `this.options`.
     *
     * @param {T} data Options to set.
     */
    setOptions(options: TOptions): void;
    /**
     * Sets both data and options
     * @param data
     * @param options
     */
    set(data: Partial<T>, options: TOptions): void;
}
