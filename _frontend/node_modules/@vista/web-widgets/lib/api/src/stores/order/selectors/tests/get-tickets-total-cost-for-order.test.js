var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { orderStoreInstance } from '../../order-store';
import { getTicketsTotalCostForOrder } from '../get-tickets-total-cost-for-showtime';
import { exampleStandardTicketType1 } from '../../../../../../example-data/order/order-ticket-type';
import { exampleOrderShowtime } from '../../../../../../example-data/order/order-showtime';
import { exampleStandardTicket1 } from '../../../../../../example-data/order/order-ticket';
describe('getTicketsTotalCostForOrder', function () {
    beforeEach(function () {
        orderStoreInstance.flush();
    });
    it('returns 0 if the order has no showtimes', function () {
        orderStoreInstance.data.order.showtimes = [];
        var result = getTicketsTotalCostForOrder();
        expect(result).toEqual(0);
    });
    it('returns the total value of all tickets in all showtimes', function () {
        var ticketTypes = new Map([
            [exampleStandardTicketType1.key, __assign({}, exampleStandardTicketType1, { price: 5 })]
        ]);
        var showtime = __assign({}, exampleOrderShowtime, { tickets: [__assign({}, exampleStandardTicket1, { quantity: 1 })], ticketTypes: ticketTypes });
        orderStoreInstance.data.order.showtimes = [showtime, showtime];
        var result = getTicketsTotalCostForOrder();
        expect(result).toEqual(10);
    });
});
//# sourceMappingURL=get-tickets-total-cost-for-order.test.js.map