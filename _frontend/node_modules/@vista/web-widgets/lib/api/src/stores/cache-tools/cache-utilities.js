import { addMinutes, isFuture } from 'date-fns';
import { isFetchedDataSuccess } from './fetched-data';
/**
 * Get cached ScreeningDates data from the store for the specified query if that data is available,
 * and is not older than the cache time limit.
 *
 * @param {FetchedData<T> | undefined} cachedValue
 * @returns {FetchedData<T> | undefined}
 */
export function getValidatedCachedData(cachedValue, cacheTimeLimitMinutes) {
    // Return undefined if there is no cached data
    if (!cachedValue)
        return undefined;
    // Check if cachedValue is associated with a Successful API response
    if (isFetchedDataSuccess(cachedValue)) {
        var expiryDate = addMinutes(cachedValue.timestamp, cacheTimeLimitMinutes);
        if (isFuture(expiryDate)) {
            return cachedValue;
        }
    }
    return undefined;
}
//# sourceMappingURL=cache-utilities.js.map