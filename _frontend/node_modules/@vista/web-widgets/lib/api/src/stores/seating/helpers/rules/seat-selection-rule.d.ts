import { SeatLayoutStateManager } from '../utils/seat-layout-state-manager';
/**
 *  Represents a rule that is used to validate whether the current seat selection is valid
 */
export interface SeatSelectionRule {
    /**
     * The unique name of the rule
     */
    name: SeatSelectionRuleName;
    /**
     * Whether the rule should prevent seat selection when violated
     * e.g. When clicking on a sold seat
     */
    preventSeatSelection: boolean;
    /**
     * A function that validates that the current seat layout state does not violate this rule
     */
    validate: (seatLayoutStateManager: SeatLayoutStateManager) => SeatSelectionRuleValidationResult;
}
/**
 * Seat selection rule names
 */
export declare enum SeatSelectionRuleName {
    CannotExceedAllocatedSeatsForAreaCategory = 0,
    CannotLeaveGapsBetweenSelectedSeats = 1,
    CannotLeaveSingleSeatGapFromAisle = 2,
    CannotLeaveSingleSeatGapFromUnavailableSeat = 3,
    CannotSelectUnavailableSeats = 4,
    MustFillSofaSeats = 5,
    MustSelectAllSeatsAllocatedForOrder = 6,
    MustSelectAssociatedWheelchairSeat = 7,
    MustSelectAtLeastOneSeat = 8
}
export interface SeatSelectionRuleValidationResult {
    ruleName: SeatSelectionRuleName;
    valid: boolean;
}
