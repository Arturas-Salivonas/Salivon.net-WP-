"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var accounting_js_1 = require("accounting-js");
var types_1 = require("../../types");
/**
 * Formats a given monetary value as a string, based on provide I18NCurrencyConfiguration
 * Wrapper for accounting-js formatMoney (http://openexchangerates.github.io/accounting.js/#methods)
 *
 * @param value The monetary value to be formatted
 * @param currencyFormat The override for default's currency format to use
 */
function formatCurrency(value, currencyFormat) {
    // merge number and currency configuration and map to accounting-js format here
    var accountingCurrencySettings = {
        symbol: currencyFormat && currencyFormat.symbol ? currencyFormat.symbol : types_1.defaultCurrencyConfiguration.symbol,
        format: currencyFormat && currencyFormat.format ? currencyFormat.format : types_1.defaultCurrencyConfiguration.format,
        decimal: currencyFormat && currencyFormat.decimalSeparator ? currencyFormat.decimalSeparator : types_1.defaultCurrencyConfiguration.decimalSeparator,
        thousand: currencyFormat && typeof currencyFormat.thousandsSeparator !== 'undefined' ? currencyFormat.thousandsSeparator : types_1.defaultCurrencyConfiguration.thousandsSeparator,
        precision: currencyFormat && typeof currencyFormat.decimalPrecision !== 'undefined' ? currencyFormat.decimalPrecision : types_1.defaultCurrencyConfiguration.decimalPrecision
    };
    // return formatted string
    return accounting_js_1.formatMoney(value, accountingCurrencySettings);
}
exports.formatCurrency = formatCurrency;
//# sourceMappingURL=currency.js.map