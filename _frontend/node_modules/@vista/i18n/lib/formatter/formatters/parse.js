"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var accounting_js_1 = require("accounting-js");
var types_1 = require("../../types");
/**
 * Converts the string representation of a number or currency to its number data-type equivalent
 * Wrapper for accounting-js unformat (http://openexchangerates.github.io/accounting.js/#methods)
 *
 * Example:
 * ```javascript
 * parse('1,050.55') // will return 1050.55
 * parse('$ 1,050.70') // will return 1050.7
 * parse('2.534.234,1234 â‚¬') // wil return 2534234.1234
 * parse('xyz') // will return 0
 * ```
 *
 * @param value The monetary value to be formatted
 * @param value The override for default's decimal separator
 */
function parse(value, decimalSeparator) {
    return accounting_js_1.unformat(value, decimalSeparator || types_1.defaultNumberConfiguration.decimalSeparator);
}
exports.parse = parse;
//# sourceMappingURL=parse.js.map